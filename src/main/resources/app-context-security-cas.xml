<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:sec="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
       http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd">

	<!-- 放行的资源 -->
	<sec:http pattern="/core/login/**" security="none" />
	<sec:http pattern="/core/skin/**" security="none" />
	<sec:http pattern="/core/js/**" security="none" />
	<sec:http pattern="/core/common/**" security="none" />
	<sec:http pattern="/core/schema/**" security="none" />

	<!-- 拦截的资源 -->
	<sec:http entry-point-ref="casProcessingFilterEntryPoint"
		auto-config="true">
		<sec:intercept-url pattern="/**" access="ROLE_EVERYONE" />
		<sec:custom-filter ref="casProcessingFilter" after="CAS_FILTER" />
		<sec:logout invalidate-session="true" logout-url="/logout"
			logout-success-url="${com.hf.framework.cas.url}/logout?service=${com.hf.framework.app.url}/main" />
	</sec:http>

	<!-- 认证管理器 -->
	<sec:authentication-manager alias="authenticationManager">
		<sec:authentication-provider ref="casAuthenticationProvider" />
	</sec:authentication-manager>

	<!-- 服务地址相关信息 -->
	<bean id="serviceProperties" class="org.springframework.security.cas.ServiceProperties">
		<property name="service"
			value="${com.hf.framework.app.url}/j_spring_cas_security_check" />
		<property name="sendRenew" value="false" />
	</bean>

	<!-- cas认证过滤器 -->
	<bean id="casProcessingFilter"
		class="com.sinosafe.xszc.interceptor.controller.CustomerCasAuthenticationFilterController">
		<property name="authenticationManager" ref="authenticationManager" />
		<property name="filterProcessesUrl" value="/j_spring_cas_security_check" />
	</bean>

	<!-- 认证入口，当无对应的权限时跳转到对应的url -->
	<bean id="casProcessingFilterEntryPoint"
		class="org.springframework.security.cas.web.CasAuthenticationEntryPoint">
		<property name="loginUrl" value="${com.hf.framework.cas.url}/login" />
		<property name="serviceProperties" ref="serviceProperties" />
	</bean>

	<!-- 进行登录凭证信息验证 -->
	<bean id="casAuthenticationProvider"
		class="org.springframework.security.cas.authentication.CasAuthenticationProvider">
		<property name="userDetailsService" ref="userDetailService" />
		<property name="serviceProperties" ref="serviceProperties" />
		<property name="ticketValidator">
			<bean class="org.jasig.cas.client.validation.Cas20ServiceTicketValidator">
				<constructor-arg index="0" value="${com.hf.framework.cas.url}" />
			</bean>
		</property>
		<property name="key" value="my_password_for_this_auth_provider_only" />
	</bean>

	<!-- 自定义的用户认证服务 -->
	<bean id="userDetailService"
		class="com.hf.framework.service.security.dao.SecurityJdbcDaoImpl"
		lazy-init="true">
		<property name="dataSource" ref="dataSource" />
		<property name="usersByUsernameQuery">
			<value>
				select u.user_code,
				u.pwd,
				case u.status
				when 'N' then
				1
				else
				0
				end
				enable,
				u.user_cname
				from um_user u where u.user_code = ?
			</value>
		</property>
		<property name="authoritiesByUsernameQuery">
			<value>
				select u.user_code, r.role_cname
				from um_user u,
				um_system_user
				sysuser,
				um_sys_user_role surole,
				um_role r
				where u.user_code =
				sysuser.user_code
				and sysuser.sys_user_id = surole.sys_user_id
				and
				surole.role_code = r.role_code
				and u.user_code = ?
			</value>
		</property>
		<property name="adminQuery">
			<value>
				select count(1) from um_admin where
				um_admin.user_code=? and
				um_admin.sys_code=?
			</value>
		</property>
	</bean>

</beans>