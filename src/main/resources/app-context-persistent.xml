<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
	<!-- DataSource数据源配置 -->
	<context:property-placeholder location="classpath:cfg.properties" />
	
	<!-- 本地数据源DataSource配置 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${com.hf.framework.datasource.driver}"></property>
		<property name="jdbcUrl" value="${com.hf.framework.datasource.url}"></property>
		<property name="user" value="${com.hf.framework.datasource.username}"></property>
		<property name="password" value="${com.hf.framework.datasource.password}"></property>
		<property name="initialPoolSize" value="${com.hf.framework.datasource.initialPoolSize}"></property>
		<property name="maxIdleTime" value="${com.hf.framework.datasource.maxIdleTime}"></property>
		<property name="maxPoolSize" value="${com.hf.framework.datasource.maxPoolSize}"></property>
		<property name="minPoolSize" value="${com.hf.framework.datasource.minPoolSize}"></property>
	</bean>

	<!-- jndi数据源配置 
	<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean"> 
		<property name="jndiName" value="${com.hf.framework.datasource.jndi}" /> 
	</bean> 
	-->
	
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 应用系统将对应的SqlMapper配置到,对应的mybatis-config.xml中就可以。  -->
        <property name="configLocation" value="classpath:com/sinosafe/xszc/sqlmapper/MyBatis-Config.xml" /> 
		<property name="dataSource" ref="dataSource" />
		<!-- 框架配置，不可修改。 -->
		<property name="mapperLocations">
			<list>
				<value>classpath:com/hf/framework/dao/CommonDaoSqlMapper.xml</value>
				<value>classpath:com/hf/framework/um/UmService_sqlMapper.xml</value>
			</list>
		</property>
	</bean>
	
	<!-- 公共Dao配置 -->
	<bean id="baseDao" class="com.hf.framework.dao.CommonDaoImpl">
		<property name="sqlSessionFactory" ref="sqlSessionFactory"></property>
		<property name="nameSpace" value="com.hf.framework.dao.CommonDao"></property>
	</bean>
	
	<!-- UM接口配置 -->
	<bean id="umService" class="com.hf.framework.um.service.UmServiceImpl" >
		<property name="dao" ref="baseDao" ></property>
		<property name="sysCode" value="xszc" ></property>
	</bean>

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 定义拦截器，用来指定事物属性，级别，和异常处理 -->
	<aop:config>
		<aop:pointcut id="serviceMethods" expression="execution(* com.hf.framework.exception.service.*.*(..))||execution(* com.sinosafe.xszc.*.service.*.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="serviceMethods" />
	</aop:config>

	<!-- 配置事务传播特性 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="find*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="get*" propagation="REQUIRED" />
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="remove*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="process*" propagation="REQUIRED" />
			<tx:method name="close*" propagation="REQUIRED" />
			<tx:method name="*" propagation="SUPPORTS" read-only="true" />
			<!-- <tx:method name="*" propagation="REQUIRED" isolation="READ_COMMITTED" timeout="-1" /> -->
		</tx:attributes>
	</tx:advice>
</beans>
