<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sinosafe.xszc.common.vo.Category" >
	<resultMap id="BaseResultMap" type="java.util.HashMap">
		<result column="UPDATED_USER" property="updatedUser" jdbcType="VARCHAR" javaType="java.lang.String" />
 		<result column="CATEGORY_CODE" property="categoryCode" jdbcType="VARCHAR" javaType="java.lang.String" />
 		<result column="VALID_IND" property="validInd" jdbcType="CHAR" javaType="java.lang.String" />
 		<result column="CATEGORY_NAME" property="categoryName" jdbcType="VARCHAR" javaType="java.lang.String" />
 		<result column="CREATED_DATE" property="createdDate" jdbcType="DATE" javaType="java.sql.Timestamp" />
 		<result column="CREATED_USER" property="createdUser" jdbcType="VARCHAR" javaType="java.lang.String" />
 		<result column="REMARK" property="remark" jdbcType="VARCHAR" javaType="java.lang.String" />
 		<result column="UPDATED_DATE" property="updatedDate" jdbcType="DATE" javaType="java.sql.Timestamp" />
 	</resultMap>
	
	<resultMap id="BaseResultVo" type="com.sinosafe.xszc.common.vo.Category">
		<result column="UPDATED_USER" property="updatedUser" jdbcType="VARCHAR" javaType="java.lang.String" />
 		<result column="CATEGORY_CODE" property="categoryCode" jdbcType="VARCHAR" javaType="java.lang.String" />
 		<result column="VALID_IND" property="validInd" jdbcType="CHAR" javaType="java.lang.String" />
 		<result column="CATEGORY_NAME" property="categoryName" jdbcType="VARCHAR" javaType="java.lang.String" />
 		<result column="CREATED_DATE" property="createdDate" jdbcType="DATE" javaType="java.sql.Timestamp" />
 		<result column="CREATED_USER" property="createdUser" jdbcType="VARCHAR" javaType="java.lang.String" />
 		<result column="REMARK" property="remark" jdbcType="VARCHAR" javaType="java.lang.String" />
 		<result column="UPDATED_DATE" property="updatedDate" jdbcType="DATE" javaType="java.sql.Timestamp" />
 	</resultMap>

	<!-- 查询数据列Sql不转换成对应的Java命名 -->
	<sql id="Base_Column_List" >
		UPDATED_USER,
		CATEGORY_CODE,
		VALID_IND,
		CATEGORY_NAME,
		CREATED_DATE,
		CREATED_USER,
		REMARK,
		UPDATED_DATE
	</sql>
	
	<!-- 查询数据列Sql换成对应的Java命名 -->
	<sql id="Base_Column_List_JavaName" >
		UPDATED_USER as "updatedUser",
		CATEGORY_CODE as "categoryCode",
		VALID_IND as "validInd",
		CATEGORY_NAME as "categoryName",
		CREATED_DATE as "createdDate",
		CREATED_USER as "createdUser",
		REMARK as "remark",
		UPDATED_DATE as "updatedDate"
	</sql>
	
	<!-- 写入操作的SQL -->
	<sql id="Insert_Base_values">
		#{updatedUser,jdbcType=VARCHAR},
 		#{categoryCode,jdbcType=VARCHAR},
 		#{validInd,jdbcType=CHAR},
 		#{categoryName,jdbcType=VARCHAR},
 		#{createdDate,jdbcType=DATE},
 		#{createdUser,jdbcType=VARCHAR},
 		#{remark,jdbcType=VARCHAR},
 		#{updatedDate,jdbcType=DATE}
 	</sql>
	
	<!-- 查询条件的sql -->
	<sql id="Base_Where_Sql">
		<where>
		<if test="updatedUser != null and updatedUser != ''">
			and UPDATED_USER = #{updatedUser,jdbcType=VARCHAR}
		</if>
		<if test="categoryCode != null and categoryCode != ''">
			and CATEGORY_CODE = #{categoryCode,jdbcType=VARCHAR}
		</if>
		<if test="validInd != null and validInd != ''">
			and VALID_IND = #{validInd,jdbcType=CHAR}
		</if>
		<if test="categoryName != null and categoryName != ''">
			and CATEGORY_NAME = #{categoryName,jdbcType=VARCHAR}
		</if>
		<if test="createdDate != null and createdDate != ''">
			and CREATED_DATE = #{createdDate,jdbcType=DATE}
		</if>
		<if test="createdUser != null and createdUser != ''">
			and CREATED_USER = #{createdUser,jdbcType=VARCHAR}
		</if>
		<if test="remark != null and remark != ''">
			and REMARK = #{remark,jdbcType=VARCHAR}
		</if>
		<if test="updatedDate != null and updatedDate != ''">
			and UPDATED_DATE = #{updatedDate,jdbcType=DATE}
		</if>
		</where>
	</sql>
	
	<!-- 
		insert操作给定的参数是java.util.Map<String,Object>类型的对象，
		与<sql id="Insert_Base_values">中配置的列一致
	-->
	<insert id="insertVo" parameterType="com.sinosafe.xszc.common.vo.Category" >
    insert into CATEGORY (
		<include refid="Base_Column_List" />
    )
	values (
		<include refid="Insert_Base_values" />
    )
	</insert>
	
	<!-- 
		insert操作给定的参数是java.util.Map<String,Object>类型的对象，
		与<sql id="Insert_Base_values">中配置的列一致
	-->
	<insert id="insert" parameterType="map" >
    insert into CATEGORY (
		<include refid="Base_Column_List" />
    )
	values (
		<include refid="Insert_Base_values" />
    )
	</insert>

	<!-- 
		<delete id="deleteByDataKey" parameterType="long">
	    delete from CATEGORY
	    where PK_SERIAL = #{data}
		</delete>
	 -->

	<!-- 条件查询总数据量 -->
	<select id="queryCount" parameterType="map" resultType="long">
	select count(1)
	from CATEGORY <include refid="Base_Where_Sql" />
	</select>
	
	<!-- 条件查询总数据量 -->
	<select id="queryCountVo" parameterType="com.sinosafe.xszc.common.vo.Category" resultType="long">
	select count(1)
	from CATEGORY <include refid="Base_Where_Sql" />
	</select>

	<!-- 渠道大类 -->
	<select id="queryListPage" parameterType="map" resultMap="BaseResultMap">
		select t.category_code as "categoryCode",t.category_name as "categoryName" 
		  from CATEGORY t 
		 where t.valid_ind = '1' 
		 and length(t.category_code) = 5
		 order by category_code
	</select>
	
	<!-- 渠道类型 -->
	<select id="queryListsPage" parameterType="java.lang.String" resultMap="BaseResultMap">
		select t.category_code as "categoryCode",t.category_name as "categoryName" 
		  from CATEGORY t 
		 where t.valid_ind = '1' 
		 and t.category_code like #{parentCode} || '%'
		 and length(t.category_code) = length(#{parentCode}) + 2
		 order by category_code
	</select>
	
    <!-- 渠道性质/渠道属类 取物化视图的数据，不用同步，去掉直接业务190020204 -->
	<select id="queryListMV" parameterType="java.lang.String" resultMap="BaseResultMap">
	    select t.c_cde as "categoryCode", t.c_cnm as "categoryName"
	      from t_comm_code t
	     where 1 = 1
	       and t.c_par_cde = #{parentCode}
	       and t.c_cde != '190020204'
	     order by c_cde
	</select>
	
	<!-- 单独条件分页查询语句,注意下面语句中的endpoint和startpoint这两个名称不可修改，否则将导致sql错误 -->
	<select id="queryListPageVo" parameterType="map" resultMap="BaseResultVo">
	select * from (
		select a.*,rownum rn from (
		select 
		<include refid="Base_Column_List"/>
		from CATEGORY
		<include refid="Base_Where_Sql"/>
		) a where rownum &lt;= #{endpoint}
	) where rn &gt;= #{startpoint}
	</select>
	
	<!-- 条件查询 -->
	<select id="query" parameterType="map" resultMap="BaseResultMap">
		select 
		<include refid="Base_Column_List"/>
		from CATEGORY
		<include refid="Base_Where_Sql"/>
	</select>
	
	<!-- 条件查询 -->
	<select id="queryVo" parameterType="map" resultMap="BaseResultVo">
		select 
		<include refid="Base_Column_List"/>
		from CATEGORY
		<include refid="Base_Where_Sql"/>
	</select>
	
	<!-- 综合条件分页查询语句,注意下面语句中的endpoint和startpoint这两个名称不可修改，否则将导致sql错误 -->
	<select id="queryPage" parameterType="map" resultMap="BaseResultMap">
	<choose>
		<when test="endpoint!=null and endpoint != '' and startpoint != null and startpoint != ''">
		select * from (
			select a.*,rownum rn from (
				select 
				<include refid="Base_Column_List"/>
				from CATEGORY
				<include refid="Base_Where_Sql"/>
			) a where rownum &lt;= #{endpoint}
		) where rn &gt;= #{startpoint}
		</when>
		<otherwise>
		<!-- 这里的"count"重命名不可修改，否则会出现异常 -->
		select count(1) "count" from CATEGORY <include refid="Base_Where_Sql" />
		</otherwise>
	</choose>
	</select>
</mapper>
