<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sinosafe.xszc.channel.vo.ChannelMain" >
	<resultMap id="BaseResultMap" type="java.util.HashMap">
		<id column="CHANNEL_CODE" property="channelCode" javaType="java.lang.String" jdbcType="VARCHAR" />
		<result column="BANK_NODE" property="bankNode" jdbcType="VARCHAR" javaType="java.lang.String" />
 		<result column="BANK_ACCOUNT" property="bankAccount" jdbcType="VARCHAR" javaType="java.lang.String" />
 		<result column="CREATED_USER" property="createdUser" jdbcType="VARCHAR" javaType="java.lang.String" />
 		<result column="REMARK" property="remark" jdbcType="VARCHAR" javaType="java.lang.String" />
 		<result column="UPDATED_DATE" property="updatedDate" jdbcType="DATE" javaType="java.sql.Timestamp" />
 		<result column="STATUS" property="status" jdbcType="CHAR" javaType="java.lang.String" />
 		<result column="VALID_IND" property="validInd" jdbcType="CHAR" javaType="java.lang.String" />
 		<result column="CREATED_DATE" property="createdDate" jdbcType="DATE" javaType="java.sql.Timestamp" />
 		<result column="CATEGORY" property="category" jdbcType="CHAR" javaType="java.lang.String" />
 		<result column="MISTAKE_CONTENT" property="mistakeContent" jdbcType="VARCHAR" javaType="java.lang.String" />
 		<result column="TEL" property="tel" jdbcType="VARCHAR" javaType="java.lang.String" />
 		<result column="BANK_PROVINCE" property="bankProvince" jdbcType="VARCHAR" javaType="java.lang.String" />
 		<result column="UPDATED_USER" property="updatedUser" jdbcType="VARCHAR" javaType="java.lang.String" />
 		<result column="BANK_RECEIVE" property="bankReceive" jdbcType="VARCHAR" javaType="java.lang.String" />
  		<result column="FINANCE_FLAG" property="financeFlag" jdbcType="CHAR" javaType="java.lang.String" />
 		<result column="PROPERTY" property="property" jdbcType="CHAR" javaType="java.lang.String" />
 		<result column="DEPT_CODE" property="deptCode" jdbcType="VARCHAR" javaType="java.lang.String" />
 		<result column="OFFICE_ADDRESS" property="officeAddress" jdbcType="VARCHAR" javaType="java.lang.String" />
 		<result column="BANK_NAME" property="bankName" jdbcType="VARCHAR" javaType="java.lang.String" />
 		<result column="CONTACT" property="contact" jdbcType="VARCHAR" javaType="java.lang.String" />
 		<result column="BUSINESS_LINE" property="businessLine" jdbcType="CHAR" javaType="java.lang.String" />
 		<result column="CHANNEL_FEATURE" property="channelFeature" jdbcType="CHAR" javaType="java.lang.String" />
 		<result column="BANK_CITY" property="bankCity" jdbcType="VARCHAR" javaType="java.lang.String" />
 		<result column="MISTAKE_FLAG" property="mistakeFlag" jdbcType="CHAR" javaType="java.lang.String" />
 		<result column="CHANNEL_FLAG" property="channelFlag" jdbcType="CHAR" javaType="java.lang.String" />
 		<result column="CHANNEL_RATE" property="channelRate" jdbcType="DOUBLE" javaType="java.lang.Double" />
 		<result column="CHANNEL_TYPE" property="channelType" jdbcType="CHAR" javaType="java.lang.String" />
 		<result column="CHANNEL_OWN_TYPE" property="channelOwnType" jdbcType="CHAR" javaType="java.lang.String" />
 		<result column="CHANNEL_CATEGORY" property="channelCategory" jdbcType="CHAR" javaType="java.lang.String" />
 		<result column="CHANNEL_PROPERTY" property="channelProperty" jdbcType="CHAR" javaType="java.lang.String" />
 		<result column="APPROVE_FLAG" property="approveFlag" jdbcType="CHAR" javaType="java.lang.String" />
 		<result column="APPROVE_CODE" property="approveCode" jdbcType="VARCHAR" javaType="java.lang.String" />
 		<result column="OVERDUE_DATE" property="overdueDate" jdbcType="DATE" javaType="java.lang.String" />
 		<result column="TAXPAYER" property="taxpayerName" jdbcType="VARCHAR" javaType="java.lang.String" />
 		<result column="TAXPAYER_NO" property="taxpayerIdNum" jdbcType="VARCHAR" javaType="java.lang.String" />
 		<result column="TAXPAYER_QUALIFICATION" property="taxpayerQualify" jdbcType="VARCHAR" javaType="java.lang.String" />
 		<result column="TAX_INVOICE" property="invoiceType" jdbcType="VARCHAR" javaType="java.lang.String" />
 		<result column="TAX_RATE" property="taxRate" jdbcType="VARCHAR" javaType="java.lang.String" />
 	</resultMap>
	
	<resultMap id="BaseResultVo" type="com.sinosafe.xszc.channel.vo.ChannelMain">
		<id column="CHANNEL_CODE" property="channelCode" javaType="java.lang.String" jdbcType="VARCHAR" />
		<result column="BANK_NODE" property="bankNode" jdbcType="VARCHAR" javaType="java.lang.String" />
 		<result column="BANK_ACCOUNT" property="bankAccount" jdbcType="VARCHAR" javaType="java.lang.String" />
 		<result column="CREATED_USER" property="createdUser" jdbcType="VARCHAR" javaType="java.lang.String" />
 		<result column="REMARK" property="remark" jdbcType="VARCHAR" javaType="java.lang.String" />
 		<result column="UPDATED_DATE" property="updatedDate" jdbcType="DATE" javaType="java.sql.Timestamp" />
 		<result column="STATUS" property="status" jdbcType="CHAR" javaType="java.lang.String" />
 		<result column="VALID_IND" property="validInd" jdbcType="CHAR" javaType="java.lang.String" />
 		<result column="CREATED_DATE" property="createdDate" jdbcType="DATE" javaType="java.sql.Timestamp" />
 		<result column="CATEGORY" property="category" jdbcType="CHAR" javaType="java.lang.String" />
 		<result column="MISTAKE_CONTENT" property="mistakeContent" jdbcType="VARCHAR" javaType="java.lang.String" />
 		<result column="TEL" property="tel" jdbcType="VARCHAR" javaType="java.lang.String" />
 		<result column="BANK_PROVINCE" property="bankProvince" jdbcType="VARCHAR" javaType="java.lang.String" />
 		<result column="UPDATED_USER" property="updatedUser" jdbcType="VARCHAR" javaType="java.lang.String" />
 		<result column="BANK_RECEIVE" property="bankReceive" jdbcType="VARCHAR" javaType="java.lang.String" />
  		<result column="FINANCE_FLAG" property="financeFlag" jdbcType="CHAR" javaType="java.lang.String" />
 		<result column="PROPERTY" property="property" jdbcType="CHAR" javaType="java.lang.String" />
 		<result column="DEPT_CODE" property="deptCode" jdbcType="VARCHAR" javaType="java.lang.String" />
 		<result column="OFFICE_ADDRESS" property="officeAddress" jdbcType="VARCHAR" javaType="java.lang.String" />
 		<result column="BANK_NAME" property="bankName" jdbcType="VARCHAR" javaType="java.lang.String" />
 		<result column="CONTACT" property="contact" jdbcType="VARCHAR" javaType="java.lang.String" />
 		<result column="BUSINESS_LINE" property="businessLine" jdbcType="CHAR" javaType="java.lang.String" />
 		<result column="CHANNEL_FEATURE" property="channelFeature" jdbcType="CHAR" javaType="java.lang.String" />
 		<result column="BANK_CITY" property="bankCity" jdbcType="VARCHAR" javaType="java.lang.String" />
 		<result column="MISTAKE_FLAG" property="mistakeFlag" jdbcType="CHAR" javaType="java.lang.String" />
 		<result column="CHANNEL_FLAG" property="channelFlag" jdbcType="CHAR" javaType="java.lang.String" />
 		<result column="CHANNEL_RATE" property="channelRate" jdbcType="DOUBLE" javaType="java.lang.Double" />
 		<result column="CHANNEL_TYPE" property="channelType" jdbcType="CHAR" javaType="java.lang.String" />
 		<result column="CHANNEL_OWN_TYPE" property="channelOwnType" jdbcType="CHAR" javaType="java.lang.String" />
 		<result column="CHANNEL_CATEGORY" property="channelCategory" jdbcType="CHAR" javaType="java.lang.String" />
 		<result column="CHANNEL_PROPERTY" property="channelProperty" jdbcType="CHAR" javaType="java.lang.String" />
 		<result column="APPROVE_FLAG" property="approveFlag" jdbcType="CHAR" javaType="java.lang.String" />
 		<result column="APPROVE_CODE" property="approveCode" jdbcType="VARCHAR" javaType="java.lang.String" />
 		<result column="OVERDUE_DATE" property="overdueDate" jdbcType="DATE" javaType="java.lang.String" />
 		<result column="TAXPAYER" property="taxpayerName" jdbcType="VARCHAR" javaType="java.lang.String" />
 		<result column="TAXPAYER_NO" property="taxpayerIdNum" jdbcType="VARCHAR" javaType="java.lang.String" />
 		<result column="TAXPAYER_QUALIFICATION" property="taxpayerQualify" jdbcType="VARCHAR" javaType="java.lang.String" />
 		<result column="TAX_INVOICE" property="invoiceType" jdbcType="VARCHAR" javaType="java.lang.String" />
 		<result column="TAX_RATE" property="taxRate" jdbcType="VARCHAR" javaType="java.lang.String" />
 	</resultMap>

	<!-- 查询数据列Sql不转换成对应的Java命名 -->
	<sql id="Base_Column_List" >
		BANK_NODE,
		BANK_ACCOUNT,
		CREATED_USER,
		REMARK,
		UPDATED_DATE,
		STATUS,
		VALID_IND,
		CREATED_DATE,
		CATEGORY,
		MISTAKE_CONTENT,
		TEL,
		BANK_PROVINCE,
		UPDATED_USER,
		BANK_RECEIVE,
		CHANNEL_CODE,
		FINANCE_FLAG,
		PROPERTY,
		DEPT_CODE,
		OFFICE_ADDRESS,
		BANK_NAME,
		CONTACT,
		BUSINESS_LINE,
		CHANNEL_FEATURE,
		BANK_CITY,
		MISTAKE_FLAG,
		CHANNEL_FLAG,
		CHANNEL_RATE,
		CHANNEL_TYPE,
		CHANNEL_OWN_TYPE,
		CHANNEL_CATEGORY,
		CHANNEL_PROPERTY,
		APPROVE_FLAG,
		TAXPAYER,
		TAXPAYER_NO,
		TAXPAYER_QUALIFICATION,
		TAX_INVOICE,
		TAX_RATE,
		BIZ_SOURCE
	</sql>
	
	<!-- 查询数据列Sql换成对应的Java命名 -->
	<sql id="Base_Column_List_JavaName" >
		BANK_NODE as "bankNode",
		BANK_ACCOUNT as "bankAccount",
		CREATED_USER as "createdUser",
		REMARK as "remark",
		UPDATED_DATE as "updatedDate",
		STATUS as "status",
		VALID_IND as "validInd",
		CREATED_DATE as "createdDate",
		CATEGORY as "category",
		MISTAKE_CONTENT as "mistakeContent",
		TEL as "tel",
		BANK_PROVINCE as "bankProvince",
		UPDATED_USER as "updatedUser",
		BANK_RECEIVE as "bankReceive",
		CHANNEL_CODE as "channelCode",
		FINANCE_FLAG as "financeFlag",
		PROPERTY as "property",
		DEPT_CODE as "deptCode",
		OFFICE_ADDRESS as "officeAddress",
		BANK_NAME as "bankName",
		CONTACT as "contact",
		BUSINESS_LINE as "businessLine",
		CHANNEL_FEATURE as "channelFeature",
		BANK_CITY as "bankCity",
		MISTAKE_FLAG as "mistakeFlag",
		CHANNEL_FLAG as "channelFlag",
		CHANNEL_RATE as "channelRate",
		CHANNEL_TYPE as "channelType",
		CHANNEL_OWN_TYPE as "channelOwnType",
		CHANNEL_CATEGORY as "channelCategory",
		CHANNEL_PROPERTY as "channelProperty",
		APPROVE_FLAG as "approveFlag",
		TAXPAYER as "taxpayerName",
		TAXPAYER_NO as "taxpayerIdNum",
		TAXPAYER_QUALIFICATION as "taxpayerQualify",
		TAX_INVOICE as "invoiceType",
		TAX_RATE as "taxRate"
	</sql>
	
	<!-- 写入操作的SQL -->
	<sql id="Insert_Base_values">
		#{bankNode,jdbcType=VARCHAR},
 		#{bankAccount,jdbcType=VARCHAR},
 		#{createdUser,jdbcType=VARCHAR},
 		#{remark,jdbcType=VARCHAR},
 		sysdate,
 		#{status,jdbcType=CHAR},
 		#{validInd,jdbcType=CHAR},
 		sysdate,
 		#{category,jdbcType=CHAR},
 		#{mistakeContent,jdbcType=VARCHAR},
 		#{tel,jdbcType=VARCHAR},
 		#{bankProvince,jdbcType=VARCHAR},
 		#{updatedUser,jdbcType=VARCHAR},
 		#{bankReceive,jdbcType=VARCHAR},
 		#{channelCode,jdbcType=VARCHAR},
 		#{financeFlag,jdbcType=CHAR},
 		#{property,jdbcType=CHAR},
 		#{deptCode,jdbcType=VARCHAR},
 		#{officeAddress,jdbcType=VARCHAR},
 		#{bankName,jdbcType=VARCHAR},
 		#{contact,jdbcType=VARCHAR},
 		#{businessLine,jdbcType=CHAR},
 		#{channelFeature,jdbcType=CHAR},
 		#{bankCity,jdbcType=VARCHAR},
 		#{mistakeFlag,jdbcType=CHAR},
 		#{channelFlag,jdbcType=CHAR},
 		#{channelRate,jdbcType=DOUBLE},
 		#{channelType,jdbcType=CHAR},
 		#{channelOwnType,jdbcType=CHAR},
 		#{channelCategory,jdbcType=CHAR},
 		#{channelProperty,jdbcType=CHAR},
 		#{approveFlag,jdbcType=CHAR},
 		#{taxpayerName,jdbcType=CHAR},
 		#{taxpayerIdNum,jdbcType=CHAR},
 		#{taxpayerQualify,jdbcType=CHAR},
 		#{invoiceType,jdbcType=CHAR},
 		decode(#{taxRate,jdbcType=CHAR},'0%','0','3%','0.03','6%','0.06',''),
 		#{bizSource,jdbcType=CHAR}
 	</sql>
	
	<!-- 查询条件的sql -->
	<sql id="Base_Where_Sql">
		<where>
		<if test="bankNode != null and bankNode != ''">
			and BANK_NODE = #{bankNode,jdbcType=VARCHAR}
		</if>
		<if test="bankAccount != null and bankAccount != ''">
			and BANK_ACCOUNT = #{bankAccount,jdbcType=VARCHAR}
		</if>
		<if test="createdUser != null and createdUser != ''">
			and CREATED_USER = #{createdUser,jdbcType=VARCHAR}
		</if>
		<if test="remark != null and remark != ''">
			and REMARK = #{remark,jdbcType=VARCHAR}
		</if>
		<if test="updatedDate != null and updatedDate != ''">
			and UPDATED_DATE = #{updatedDate,jdbcType=DATE}
		</if>
		<if test="status != null and status != ''">
			and STATUS = #{status,jdbcType=CHAR}
		</if>
			and VALID_IND = 1
		<if test="createdDate != null and createdDate != ''">
			and CREATED_DATE = #{createdDate,jdbcType=DATE}
		</if>
		<if test="category != null and category != ''">
			and CATEGORY = #{category,jdbcType=CHAR}
		</if>
		<if test="mistakeContent != null and mistakeContent != ''">
			and MISTAKE_CONTENT = #{mistakeContent,jdbcType=VARCHAR}
		</if>
		<if test="tel != null and tel != ''">
			and TEL = #{tel,jdbcType=VARCHAR}
		</if>
		<if test="bankProvince != null and bankProvince != ''">
			and BANK_PROVINCE = #{bankProvince,jdbcType=VARCHAR}
		</if>
		<if test="updatedUser != null and updatedUser != ''">
			and UPDATED_USER = #{updatedUser,jdbcType=VARCHAR}
		</if>
		<if test="bankReceive != null and bankReceive != ''">
			and BANK_RECEIVE = #{bankReceive,jdbcType=VARCHAR}
		</if>
		<if test="channelCode != null and channelCode != ''">
			and CHANNEL_CODE = #{channelCode,jdbcType=VARCHAR}
		</if>
		<if test="financeFlag != null and financeFlag != ''">
			and FINANCE_FLAG = #{financeFlag,jdbcType=CHAR}
		</if>
		<if test="property != null and property != ''">
			and PROPERTY = #{property,jdbcType=CHAR}
		</if>
		<if test="deptCode != null and deptCode != ''">
			and DEPT_CODE = #{deptCode,jdbcType=VARCHAR}
		</if>
		<if test="officeAddress != null and officeAddress != ''">
			and OFFICE_ADDRESS = #{officeAddress,jdbcType=VARCHAR}
		</if>
		<if test="bankName != null and bankName != ''">
			and BANK_NAME = #{bankName,jdbcType=VARCHAR}
		</if>
		<if test="contact != null and contact != ''">
			and CONTACT = #{contact,jdbcType=VARCHAR}
		</if>
		<if test="businessLine != null and businessLine != ''">
			and BUSINESS_LINE = #{businessLine,jdbcType=CHAR}
		</if>
		<if test="channelFeature != null and channelFeature != ''">
			and CHANNEL_FEATURE = #{channelFeature,jdbcType=CHAR}
		</if>
		<if test="bankCity != null and bankCity != ''">
			and BANK_CITY = #{bankCity,jdbcType=VARCHAR}
		</if>
		<if test="mistakeFlag != null and mistakeFlag != ''">
			and MISTAKE_FLAG = #{mistakeFlag,jdbcType=CHAR}
		</if>
		<if test="channelFlag != null and channelFlag != ''">
			and CHANNEL_FLAG = #{channelFlag,jdbcType=CHAR}
		</if>
		<if test="channelRate != null and channelRate != ''">
			and CHANNEL_RATE = #{channelRate,jdbcType=DOUBLE}
		</if>
		<if test="channelType != null and channelType != ''">
			and CHANNEL_TYPE = #{channelType,jdbcType=CHAR}
		</if>
		<if test="channelOwnType != null and channelOwnType != ''">
			and CHANNEL_OWN_TYPE = #{channelOwnType,jdbcType=CHAR}
		</if>
		<if test="channelCategory != null and channelCategory != ''">
			and CHANNEL_CATEGORY = #{channelCategory,jdbcType=CHAR}
		</if>
		<if test="channelProperty != null and channelProperty != ''">
			and CHANNEL_PROPERTY = #{channelProperty,jdbcType=CHAR}
		</if>
		</where>
	</sql>
	
	<!-- 
		insert操作给定的参数是java.util.Map<String,Object>类型的对象，
		与<sql id="Insert_Base_values">中配置的列一致
	-->
	<insert id="insertVo" parameterType="com.sinosafe.xszc.channel.vo.ChannelMain" >
    insert into CHANNEL_MAIN (
		<include refid="Base_Column_List" />
    )
	values (
		<include refid="Insert_Base_values" />
    )
	</insert>
	
	<!-- 
		insert操作给定的参数是java.util.Map<String,Object>类型的对象，
		与<sql id="Insert_Base_values">中配置的列一致
	-->
	<insert id="insert" parameterType="map" >
    insert into CHANNEL_MAIN (
		<include refid="Base_Column_List" />
    )
	values (
		<include refid="Insert_Base_values" />
    )
	</insert>

	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from CHANNEL_MAIN
    where CHANNEL_CODE = #{channelCode,jdbcType=VARCHAR}
	</delete>
<!-- 
	<delete id="deleteByDataKey" parameterType="long">
    delete from CHANNEL_MAIN
    where PK_SERIAL = #{data}
	</delete>
 -->
	<update id="updateByPrimaryKeySelective" parameterType="map" >
	update CHANNEL_MAIN
	<set>
	<if test="bankNode != null and bankNode != ''">
		BANK_NODE = #{bankNode,jdbcType=VARCHAR},
	</if>
  	<if test="bankAccount != null and bankAccount != ''">
		BANK_ACCOUNT = #{bankAccount,jdbcType=VARCHAR},
	</if>
  	<if test="createdUser != null and createdUser != ''">
		CREATED_USER = #{createdUser,jdbcType=VARCHAR},
	</if>
  	<if test="remark != null and remark != ''">
		REMARK = #{remark,jdbcType=VARCHAR},
	</if>
  	<if test="updatedDate != null and updatedDate != ''">
		UPDATED_DATE = #{updatedDate,jdbcType=DATE},
	</if>
  	<if test="status != null and status != ''">
		STATUS = #{status,jdbcType=CHAR},
	</if>
  	<if test="validInd != null and validInd != ''">
		VALID_IND = #{validInd,jdbcType=CHAR},
	</if>
  	<if test="createdDate != null and createdDate != ''">
		CREATED_DATE = #{createdDate,jdbcType=DATE},
	</if>
  	<if test="category != null and category != ''">
		CATEGORY = #{category,jdbcType=CHAR},
	</if>
  	<if test="mistakeContent != null and mistakeContent != ''">
		MISTAKE_CONTENT = #{mistakeContent,jdbcType=VARCHAR},
	</if>
  	<if test="tel != null and tel != ''">
		TEL = #{tel,jdbcType=VARCHAR},
	</if>
  	<if test="bankProvince != null and bankProvince != ''">
		BANK_PROVINCE = #{bankProvince,jdbcType=VARCHAR},
	</if>
  	<if test="updatedUser != null and updatedUser != ''">
		UPDATED_USER = #{updatedUser,jdbcType=VARCHAR},
	</if>
  	<if test="bankReceive != null and bankReceive != ''">
		BANK_RECEIVE = #{bankReceive,jdbcType=VARCHAR},
	</if>
   	<if test="financeFlag != null and financeFlag != ''">
		FINANCE_FLAG = #{financeFlag,jdbcType=CHAR},
	</if>
  	<if test="property != null and property != ''">
		PROPERTY = #{property,jdbcType=CHAR},
	</if>
  	<if test="deptCode != null and deptCode != ''">
		DEPT_CODE = #{deptCode,jdbcType=VARCHAR},
	</if>
  	<if test="officeAddress != null and officeAddress != ''">
		OFFICE_ADDRESS = #{officeAddress,jdbcType=VARCHAR},
	</if>
  	<if test="bankName != null and bankName != ''">
		BANK_NAME = #{bankName,jdbcType=VARCHAR},
	</if>
  	<if test="contact != null and contact != ''">
		CONTACT = #{contact,jdbcType=VARCHAR},
	</if>
  	<if test="businessLine != null and businessLine != ''">
		BUSINESS_LINE = #{businessLine,jdbcType=CHAR},
	</if>
  	<if test="channelFeature != null and channelFeature != ''">
		CHANNEL_FEATURE = #{channelFeature,jdbcType=CHAR},
	</if>
  	<if test="bankCity != null and bankCity != ''">
		BANK_CITY = #{bankCity,jdbcType=VARCHAR},
	</if>
  	<if test="mistakeFlag != null and mistakeFlag != ''">
		MISTAKE_FLAG = #{mistakeFlag,jdbcType=CHAR},
	</if>
  	<if test="channelFlag != null and channelFlag != ''">
		CHANNEL_FLAG = #{channelFlag,jdbcType=CHAR},
	</if>
  	<if test="channelRate != null and channelRate != ''">
		CHANNEL_RATE = #{channelRate,jdbcType=DOUBLE}
	</if>
  	</set>
	where CHANNEL_CODE = #{channelCode,jdbcType=VARCHAR}
	</update>
	
	<update id="updateByPrimaryKey" parameterType="map" >
		update CHANNEL_MAIN
		set 
			BANK_NODE = #{bankNode,jdbcType=VARCHAR},
  			BANK_ACCOUNT = #{bankAccount,jdbcType=VARCHAR},
  			CREATED_USER = #{createdUser,jdbcType=VARCHAR},
  			REMARK = #{remark,jdbcType=VARCHAR},
  			UPDATED_DATE = #{updatedDate,jdbcType=DATE},
  			STATUS = #{status,jdbcType=CHAR},
  			VALID_IND = #{validInd,jdbcType=CHAR},
  			CREATED_DATE = #{createdDate,jdbcType=DATE},
  			CATEGORY = #{category,jdbcType=CHAR},
  			MISTAKE_CONTENT = #{mistakeContent,jdbcType=VARCHAR},
  			TEL = #{tel,jdbcType=VARCHAR},
  			BANK_PROVINCE = #{bankProvince,jdbcType=VARCHAR},
  			UPDATED_USER = #{updatedUser,jdbcType=VARCHAR},
  			BANK_RECEIVE = #{bankReceive,jdbcType=VARCHAR},
   			FINANCE_FLAG = #{financeFlag,jdbcType=CHAR},
  			PROPERTY = #{property,jdbcType=CHAR},
  			DEPT_CODE = #{deptCode,jdbcType=VARCHAR},
  			OFFICE_ADDRESS = #{officeAddress,jdbcType=VARCHAR},
  			BANK_NAME = #{bankName,jdbcType=VARCHAR},
  			CONTACT = #{contact,jdbcType=VARCHAR},
  			BUSINESS_LINE = #{businessLine,jdbcType=CHAR},
  			CHANNEL_FEATURE = #{channelFeature,jdbcType=CHAR},
  			BANK_CITY = #{bankCity,jdbcType=VARCHAR},
  			MISTAKE_FLAG = #{mistakeFlag,jdbcType=CHAR},
  			CHANNEL_FLAG = #{channelFlag,jdbcType=CHAR},
  			CHANNEL_RATE = #{channelRate,jdbcType=DOUBLE}
  		where CHANNEL_CODE = #{channelCode,jdbcType=VARCHAR}
	</update>

	<update id="updateByPrimaryKeySelectiveVo" parameterType="com.sinosafe.xszc.channel.vo.ChannelMain" >
	update CHANNEL_MAIN
	<set>
	<if test="bankNode != null and bankNode != ''">
		BANK_NODE = #{bankNode,jdbcType=VARCHAR},
	</if>
  	<if test="bankAccount != null and bankAccount != ''">
		BANK_ACCOUNT = #{bankAccount,jdbcType=VARCHAR},
	</if>
  	<if test="createdUser != null and createdUser != ''">
		CREATED_USER = #{createdUser,jdbcType=VARCHAR},
	</if>
  	<if test="remark != null and remark != ''">
		REMARK = #{remark,jdbcType=VARCHAR},
	</if>
		UPDATED_DATE = sysdate,
  	<if test="status != null and status != ''">
		STATUS = #{status,jdbcType=CHAR},
	</if>
  	<if test="validInd != null and validInd != ''">
		VALID_IND = #{validInd,jdbcType=CHAR},
	</if>
  	<if test="createdDate != null and createdDate != ''">
		CREATED_DATE = #{createdDate,jdbcType=DATE},
	</if>
  	<if test="category != null and category != ''">
		CATEGORY = #{category,jdbcType=CHAR},
	</if>
  	<if test="mistakeContent != null and mistakeContent != ''">
		MISTAKE_CONTENT = #{mistakeContent,jdbcType=VARCHAR},
	</if>
  	<if test="tel != null and tel != ''">
		TEL = #{tel,jdbcType=VARCHAR},
	</if>
  	<if test="bankProvince != null and bankProvince != ''">
		BANK_PROVINCE = #{bankProvince,jdbcType=VARCHAR},
	</if>
  	<if test="updatedUser != null and updatedUser != ''">
		UPDATED_USER = #{updatedUser,jdbcType=VARCHAR},
	</if>
  	<if test="bankReceive != null and bankReceive != ''">
		BANK_RECEIVE = #{bankReceive,jdbcType=VARCHAR},
	</if>
   	<if test="financeFlag != null and financeFlag != ''">
		FINANCE_FLAG = #{financeFlag,jdbcType=CHAR},
	</if>
  	<if test="property != null and property != ''">
		PROPERTY = #{property,jdbcType=CHAR},
	</if>
  	<if test="deptCode != null and deptCode != ''">
		DEPT_CODE = #{deptCode,jdbcType=VARCHAR},
	</if>
  	<if test="officeAddress != null and officeAddress != ''">
		OFFICE_ADDRESS = #{officeAddress,jdbcType=VARCHAR},
	</if>
  	<if test="bankName != null and bankName != ''">
		BANK_NAME = #{bankName,jdbcType=VARCHAR},
	</if>
  	<if test="contact != null and contact != ''">
		CONTACT = #{contact,jdbcType=VARCHAR},
	</if>
  	<if test="businessLine != null and businessLine != ''">
		BUSINESS_LINE = #{businessLine,jdbcType=CHAR},
	</if>
  	<if test="channelFeature != null and channelFeature != ''">
		CHANNEL_FEATURE = #{channelFeature,jdbcType=CHAR},
	</if>
  	<if test="bankCity != null and bankCity != ''">
		BANK_CITY = #{bankCity,jdbcType=VARCHAR},
	</if>
  	<if test="mistakeFlag != null and mistakeFlag != ''">
		MISTAKE_FLAG = #{mistakeFlag,jdbcType=CHAR},
	</if>
  	<if test="channelFlag != null and channelFlag != ''">
		CHANNEL_FLAG = #{channelFlag,jdbcType=CHAR},
	</if>
  	<if test="channelRate != null and channelRate != ''">
		CHANNEL_RATE = #{channelRate,jdbcType=DOUBLE}
	</if>
  	</set>
	where CHANNEL_CODE = #{channelCode,jdbcType=VARCHAR}
	</update>
	
	<update id="updateByPrimaryKeyVo" parameterType="com.sinosafe.xszc.channel.vo.ChannelMain" >
		update CHANNEL_MAIN
		set 
			BANK_NODE = #{bankNode,jdbcType=VARCHAR},
  			BANK_ACCOUNT = #{bankAccount,jdbcType=VARCHAR},
  			REMARK = #{remark,jdbcType=VARCHAR},
  			UPDATED_DATE = sysdate,
  			CATEGORY = #{category,jdbcType=CHAR},
  			MISTAKE_CONTENT = #{mistakeContent,jdbcType=VARCHAR},
  			TEL = #{tel,jdbcType=VARCHAR},
  			BANK_PROVINCE = #{bankProvince,jdbcType=VARCHAR},
  			UPDATED_USER = #{updatedUser,jdbcType=VARCHAR},
  			BANK_RECEIVE = #{bankReceive,jdbcType=VARCHAR},
   			FINANCE_FLAG = #{financeFlag,jdbcType=CHAR},
  			PROPERTY = #{property,jdbcType=CHAR},
  			DEPT_CODE = #{deptCode,jdbcType=VARCHAR},
  			OFFICE_ADDRESS = #{officeAddress,jdbcType=VARCHAR},
  			BANK_NAME = #{bankName,jdbcType=VARCHAR},
  			CONTACT = #{contact,jdbcType=VARCHAR},
  			BUSINESS_LINE = #{businessLine,jdbcType=CHAR},
  			CHANNEL_FEATURE = #{channelFeature,jdbcType=CHAR},
  			BANK_CITY = #{bankCity,jdbcType=VARCHAR},
  			MISTAKE_FLAG = #{mistakeFlag,jdbcType=CHAR},
  			CHANNEL_RATE = #{channelRate,jdbcType=DOUBLE},
  			CHANNEL_TYPE = #{channelType,jdbcType=CHAR},
  			CHANNEL_OWN_TYPE = #{channelOwnType,jdbcType=CHAR},
  			CHANNEL_CATEGORY = #{channelCategory,jdbcType=CHAR},
  			CHANNEL_PROPERTY = #{channelProperty,jdbcType=CHAR},
  			APPROVE_FLAG = #{approveFlag,jdbcType=CHAR},
  			APPROVE_CODE = #{approveCode,jdbcType=VARCHAR},
  			TAXPAYER = #{taxpayerName,jdbcType=VARCHAR},
			TAXPAYER_NO = #{taxpayerIdNum,jdbcType=VARCHAR},
			TAXPAYER_QUALIFICATION = #{taxpayerQualify,jdbcType=VARCHAR},
			TAX_INVOICE = #{invoiceType,jdbcType=VARCHAR},
			TAX_RATE = decode(#{taxRate,jdbcType=CHAR},'0%','0','3%','0.03','6%','0.06',''),
			BIZ_SOURCE = #{bizSource,jdbcType=CHAR}
  		where CHANNEL_CODE = #{channelCode,jdbcType=VARCHAR}
	</update>

	<!-- 根据Id查询一条数据 -->
	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select <include refid="Base_Column_List" />
	from CHANNEL_MAIN
	where CHANNEL_CODE = #{channelCode,jdbcType=VARCHAR}
	</select>
	<!-- 根据Id查询一条数据 -->
	<select id="selectByPrimaryKeyVo" resultMap="BaseResultVo" parameterType="java.lang.String" >
    select <include refid="Base_Column_List" />
	from CHANNEL_MAIN
	where CHANNEL_CODE = #{channelCode,jdbcType=VARCHAR}
	</select>

	<!-- 条件查询总数据量 -->
	<select id="queryCount" parameterType="map" resultType="long">
	select count(1)
	from CHANNEL_MAIN <include refid="Base_Where_Sql" />
	</select>
	
	<!-- 条件查询总数据量 -->
	<select id="queryCountVo" parameterType="com.sinosafe.xszc.channel.vo.ChannelMain" resultType="long">
	select count(1)
	from CHANNEL_MAIN <include refid="Base_Where_Sql" />
	</select>

	<!-- 单独条件分页查询语句（已经过期，详细见ChannelMediumDetail_sqlMapper.xml） -->
	<select id="queryListPage" parameterType="map" resultMap="BaseResultMap">
	select * from (
		select a.*,rownum rn from (
		select 
		<include refid="Base_Column_List"/>
		from CHANNEL_MAIN
		<include refid="Base_Where_Sql"/>
		) a where rownum &lt;= #{endpoint}
	) where rn &gt;= #{startpoint}
	</select>
	
	<!-- 单独条件分页查询语句（已经过期，详细见ChannelMediumDetail_sqlMapper.xml） -->
	<select id="queryListsPage" parameterType="map" resultMap="BaseResultMap">
		select <include refid="Base_Column_List" />
		from CHANNEL_MAIN 
		<include refid="Base_Where_Sql"/>
	</select>
	
	<!-- 单独条件分页查询语句,注意下面语句中的endpoint和startpoint这两个名称不可修改，否则将导致sql错误 -->
	<select id="queryListPageVo" parameterType="map" resultMap="BaseResultVo">
	select * from (
		select a.*,rownum rn from (
		select 
		<include refid="Base_Column_List"/>
		from CHANNEL_MAIN
		<include refid="Base_Where_Sql"/>
		) a where rownum &lt;= #{endpoint}
	) where rn &gt;= #{startpoint}
	</select>
	
	<!-- 条件查询 -->
	<select id="query" parameterType="map" resultMap="BaseResultMap">
		select 
		<include refid="Base_Column_List"/>
		from CHANNEL_MAIN
		<include refid="Base_Where_Sql"/>
	</select>
	
	<!-- 条件查询 -->
	<select id="queryVo" parameterType="map" resultMap="BaseResultVo">
		select 
		<include refid="Base_Column_List"/>
		from CHANNEL_MAIN
		<include refid="Base_Where_Sql"/>
	</select>
	
	<!-- 综合条件分页查询语句,注意下面语句中的endpoint和startpoint这两个名称不可修改，否则将导致sql错误 -->
	<select id="queryPage" parameterType="map" resultMap="BaseResultMap">
	<choose>
		<when test="endpoint!=null and endpoint != '' and startpoint != null and startpoint != ''">
		select * from (
			select a.*,rownum rn from (
				select 
				<include refid="Base_Column_List"/>
				from CHANNEL_MAIN
				<include refid="Base_Where_Sql"/>
			) a where rownum &lt;= #{endpoint}
		) where rn &gt;= #{startpoint}
		</when>
		<otherwise>
		<!-- 这里的"count"重命名不可修改，否则会出现异常 -->
		select count(1) "count" from CHANNEL_MAIN <include refid="Base_Where_Sql" />
		</otherwise>
	</choose>
	</select>
	
	<!-- 根据机构部门查询下属所有代理人 -->
	<select id="queryDeptAgent" parameterType="map" resultMap="BaseResultMap">
		select cad.channel_code as "channelCode",
      				cad.channel_name as "channelName"
		  from channel_main cm
		 inner join channel_agent_detail cad 
		 	on cm.channel_code = cad.channel_code
		 where cm.valid_ind = '1' and  cm.channel_flag = '1'
	<if test="deptCode != null and deptCode != ''">
		and cm.dept_code =  #{deptCode}
	</if>
	</select>
	
	<!-- 根据机构部门查询下属所有中介机构 -->
	<select id="queryDeptMedium" parameterType="map" resultMap="BaseResultMap">
   	 	select cad.channel_code as "channelCode",
           cad.medium_cname as "mediumCname",
           cm.dept_code
		  from channel_main cm
		 inner join channel_medium_detail cad 
		 	on cm.channel_code = cad.channel_code
		 where cm.valid_ind = '1' and  cm.channel_flag = '0'
	<if test="deptCode != null and deptCode != ''">
		and cm.dept_code =  #{deptCode}
	</if>
	</select>
	
	<update id="deleteById" parameterType="map" >
		update channel_main
		set VALID_IND = 0,
		UPDATED_DATE = sysdate,
		overdue_date = sysdate,
		UPDATED_USER = #{updatedUser,jdbcType=VARCHAR}
		where CHANNEL_CODE = #{channelCode,jdbcType=VARCHAR}
	</update>

	<select id="callChaSync" statementType="CALLABLE">
	   <![CDATA[
	     {CALL PKG_UTIL_SYNC_CHA.P_CHA_SYNC (
	      #{channelCode,mode=IN,jdbcType=VARCHAR},
	      #{flag,mode=OUT,jdbcType=VARCHAR},
	      #{msg,mode=OUT,jdbcType=VARCHAR}
	      )}
	   ]]>
	 </select>
	
	<update id="approveChannel" parameterType="map" >
		update channel_main
		set APPROVE_FLAG = #{approveFlag,jdbcType=CHAR},
  		APPROVE_CODE = #{approveCode,jdbcType=VARCHAR},
		UPDATED_DATE = sysdate,
		UPDATED_USER = #{updatedUser,jdbcType=VARCHAR}
		where CHANNEL_CODE in (
			<foreach item="item" index="index" collection="channelCodes" separator=",">
				#{item}
			</foreach>
		)
	</update>
	
	<!-- 查询全民营销代理人数据 -->
	<select id="queryAgentALL" parameterType="map" resultType="map">
			select * from (
				select a.*,rownum rn from (
				   <![CDATA[
					select 
					     t5.dept_code||t5.dept_simple_name as "deptCode",
				         d1.dept_code||d1.dept_simple_name as "deptNameTwo",
				         d2.dept_code||d2.dept_simple_name as "deptNameThree",
				         d3.dept_code||d3.dept_simple_name as "deptNameFour",
                         t8.group_name as "groupName",
				         t11.channel_code as "channelCode",
				         t11.channel_name as "channelName",
				         t11.tel as "tel",
				         t11.mobile as "mobile",
				         decode(t11.sex,'106001','男','106002','女','106003','不清楚','106009','未知','') as "sex",
				         to_char(t11.birthday, 'yyyy-mm-dd') as "birthday",
				         t4.educatioin_name as "education",
				         t3.recommender_code||t3.recommender_name as "recommenderName",
				         decode(t7.status,'1','是','否') as "salesStatus",
				         t7.position_category_name as "salesCategory",
				         to_char(t6.sign_date, 'yyyy-mm-dd') as "signDate",
				         to_char(t6.valid_date, 'yyyy-mm-dd') as "validDate",
				         to_char(t6.expire_date, 'yyyy-mm-dd') as "expireDate",
				         to_char(t11.created_date, 'yyyy-mm-dd HH24:mm:ss') as "reportMoth",
				         (case
					           when (select case
					                          when max(clcr.expire_date) is not null and
					                               max(clcr.expire_date) < sysdate then
					                           '1'
					                          else
					                           '0'
					                        end
					                   from CHANNEL_CONFER clcr
					                  where clcr.CHANNEL_CODE = t11.channel_code
					                    and clcr.VALID_IND = '1') = '1' and
					                t11.qualification_expire_date is not null and
					                trunc(t11.qualification_expire_date) < trunc(sysdate) then
					            '执业证和协议过期'
					           when t11.qualification_expire_date is not null and
					                trunc(t11.qualification_expire_date) < trunc(sysdate) then
					            '执业证过期'
					           when (select case
					                          when max(clcr.expire_date) is not null and
					                               max(clcr.expire_date) < sysdate then
					                           '1'
					                          else
					                           '0'
					                        end
					                   from CHANNEL_CONFER clcr
					                  where clcr.CHANNEL_CODE = t11.channel_code
					                    and clcr.VALID_IND = '1') = '1' then
					            '协议过期'
					           when t11.qualification_expire_date is not null and
					                trunc(t11.qualification_expire_date) > trunc(sysdate) and
					                (select case
					                          when max(clcr.expire_date) is not null and
					                               max(clcr.expire_date) > sysdate then
					                           '1'
					                          else
					                           '0'
					                        end
					                   from CHANNEL_CONFER clcr
					                  where clcr.CHANNEL_CODE = t11.channel_code
					                    and clcr.VALID_IND = '1') = '1' then
					            '正在代理（执业证及协议均未过期）'
					           else
					            '---'
					         end) as "newStatus"
				    from (
                        select t1.dept_code,
                               t2.channel_code,
                               t2.channel_name,
                               t2.tel,
                               t2.mobile,
                               t2.sex,
                               t2.birthday,
                               t2.educatioin,
                               t2.created_date,
                               t2.qualification_expire_date
                          from channel_main t1, channel_agent_detail t2
                         where 1 = 1
                           and t1.valid_ind = '1'
                           and t2.valid_ind = '1'
                           and t1.channel_code = t2.channel_code
                           and (t2.channel_name like '%2015%' or 
                                t2.channel_name like '%2016%' or
                                t2.channel_name like '%2017%'
                               )
				         ) t11
				    left join channel_recommender_detail t3
				      on t11.channel_code = t3.channel_code
				     and t3.valid_ind = '1'
				    left join educatioin t4
				      on t11.educatioin = t4.educatioin_code
				     and t4.valid_ind = '1'
				    left join department t5
				      on t11.dept_code = t5.dept_code
				     and t5.valid_ind = '1'
				    left join department d1
				      on d1.dept_code = substr(t11.dept_code, 0, 2)
				    left join department d2
				      on d2.dept_code = substr(t11.dept_code, 0, 4)
				    left join (select c2.*
				                 from (select c.*,
				                              max(c.expire_date) over(partition by c.channel_code) max_expire_date
				                         from channel_confer c) c2
				                where c2.max_expire_date = c2.expire_date) t6
				      on t11.channel_code = t6.channel_code
				      and t6.valid_ind = '1'
		            left join salesman t7
		              on t3.recommender_code = t7.employ_code
		              and t7.valid_ind = '1'
				    left join department d3
				      on d3.dept_code = t7.dept_code
				     and d3.valid_ind = '1'
                    left join group_main t8
                      on t7.group_code = t8.group_code
                      and t8.valid_ind = '1'
				    where 1 = 1
		      ]]>
			  <if test="deptCodeTwo != null and deptCodeTwo != ''">
					and substr(t11.dept_code, 0, 2) = #{deptCodeTwo,jdbcType=VARCHAR}
			  </if>
			  <if test="deptCodeThree != null and deptCodeThree != ''">
					and substr(t11.dept_code, 0, 4) = #{deptCodeThree,jdbcType=VARCHAR}
			  </if>
			  <if test="deptCodeFour != null and deptCodeFour != ''">
					and substr(t11.dept_code, 0, 8) = #{deptCodeFour,jdbcType=VARCHAR}
			  </if>
			  <if test="deptCodeFour != null and deptCodeFour != ''">
					and substr(t11.dept_code, 0, 8) = #{deptCodeFour,jdbcType=VARCHAR}
			  </if>
			  <if test="groupName != null and groupName != ''">
					and t8.group_name like '%' || trim(#{groupName,jdbcType=VARCHAR}) || '%'  
			  </if>
			  <if test="channelCode != null and channelCode != ''">
					and t11.channel_code like '%' || trim(#{channelCode,jdbcType=VARCHAR}) || '%' 
			  </if>
			  <if test="channelName != null and channelName != ''">
					and t11.channel_name like '%' || trim(#{channelName,jdbcType=VARCHAR}) || '%'  
			  </if>
			  <if test="reportDateBgn != null and reportDateBgn != '' ">
				   and <![CDATA[ t11.created_date >= to_date(#{reportDateBgn,jdbcType=VARCHAR},'yyyy-mm-dd') ]]> 
			  </if>
			  <if test="reportDateEnd != null and reportDateEnd != '' ">
				   and <![CDATA[ t11.created_date <= to_date(#{reportDateEnd,jdbcType=VARCHAR},'yyyy-mm-dd')+1 ]]> 
			  </if>
		      <if test="salesEmpty != null and salesEmpty != ''">
		         <choose>
		            <when test="salesEmpty == 1">and t3.recommender_code is null</when>
		            <when test="salesEmpty == 0">and t3.recommender_code is not null</when>
		            <otherwise></otherwise>
		         </choose>
		      </if>
		      <if test="salesStatus != null and salesStatus != ''">
		         <choose>
		            <when test="salesStatus == 1">and t7.status = '1'</when>
		            <when test="salesStatus == 0">and t7.status != '1'</when>
		            <otherwise></otherwise>
		         </choose>
		      </if>
			  <if test="certifyValid != null and certifyValid != ''">
				      <if test="certifyValid == 0"> <!-- 未过期 -->
				      <![CDATA[
				         and  t11.QUALIFICATION_EXPIRE_DATE is not null and  t11.QUALIFICATION_EXPIRE_DATE >= trunc(sysdate) 
				         and (select case
				                          when max(clcr.expire_date) is not null and
				                               max(clcr.expire_date) > sysdate then
				                           '1'
				                          else
				                           '0'
				                        end
				                   from CHANNEL_CONFER clcr
				                  where clcr.CHANNEL_CODE = t11.channel_code
				                    and clcr.VALID_IND = '1') = '1'
				      ]]>
				      </if>
				      <if test="certifyValid == 1"> <!-- 已过期 -->
				      <![CDATA[
				        and (t11.qualification_expire_date is null or t11.QUALIFICATION_EXPIRE_DATE < trunc(sysdate) or (select case
			                          when max(clcr.expire_date) is null or
			                               max(clcr.expire_date) < sysdate then
			                           '1'
			                          else
			                           '0'
			                        end
			                   from CHANNEL_CONFER clcr
			                  where clcr.CHANNEL_CODE = t11.channel_code
			                    and clcr.VALID_IND = '1') = '1')   
				         ]]>
				      </if>
				    </if>
				    order by t11.created_date desc
			) a where rownum &lt;= #{endpoint}
		) where rn &gt;= #{startpoint}
	</select>
	
	<!-- 查询全民营销代理人数据 (不带分页) -->
	<select id="queryAgentALLExcel" parameterType="map" resultType="map">
          <![CDATA[
           select 
                t5.dept_code||t5.dept_simple_name as "deptCode",
                d1.dept_code||d1.dept_simple_name as "deptNameTwo",
                d2.dept_code||d2.dept_simple_name as "deptNameThree",
                d3.dept_code||d3.dept_simple_name as "deptNameFour",
                t8.group_name as "groupName",
                t11.channel_code as "channelCode",
                t11.channel_name as "channelName",
                t11.tel as "tel",
                t11.mobile as "mobile",
                decode(t11.sex,'106001','男','106002','女','106003','不清楚','106009','未知','') as "sex",
                to_char(t11.birthday, 'yyyy-mm-dd') as "birthday",
                t4.educatioin_name as "education",
                t3.recommender_code||t3.recommender_name as "recommenderName",
                decode(t7.status,'1','是','否') as "salesStatus",
                t7.position_category_name as "salesCategory",
                to_char(t6.sign_date, 'yyyy-mm-dd') as "signDate",
                to_char(t6.valid_date, 'yyyy-mm-dd') as "validDate",
                to_char(t6.expire_date, 'yyyy-mm-dd') as "expireDate",
                to_char(t11.created_date, 'yyyy-mm-dd HH24:mm:ss') as "reportMoth",
                (case
                      when (select case
                                     when max(clcr.expire_date) is not null and
                                          max(clcr.expire_date) < sysdate then
                                      '1'
                                     else
                                      '0'
                                   end
                              from CHANNEL_CONFER clcr
                             where clcr.CHANNEL_CODE = t11.channel_code
                               and clcr.VALID_IND = '1') = '1' and
                           t11.qualification_expire_date is not null and
                           trunc(t11.qualification_expire_date) < trunc(sysdate) then
                       '执业证和协议过期'
                      when t11.qualification_expire_date is not null and
                           trunc(t11.qualification_expire_date) < trunc(sysdate) then
                       '执业证过期'
                      when (select case
                                     when max(clcr.expire_date) is not null and
                                          max(clcr.expire_date) < sysdate then
                                      '1'
                                     else
                                      '0'
                                   end
                              from CHANNEL_CONFER clcr
                             where clcr.CHANNEL_CODE = t11.channel_code
                               and clcr.VALID_IND = '1') = '1' then
                       '协议过期'
                      when t11.qualification_expire_date is not null and
                           trunc(t11.qualification_expire_date) > trunc(sysdate) and
                           (select case
                                     when max(clcr.expire_date) is not null and
                                          max(clcr.expire_date) > sysdate then
                                      '1'
                                     else
                                      '0'
                                   end
                              from CHANNEL_CONFER clcr
                             where clcr.CHANNEL_CODE = t11.channel_code
                               and clcr.VALID_IND = '1') = '1' then
                       '正在代理（执业证及协议均未过期）'
                      else
                       '---'
                    end) as "newStatus"
           from (
               select t1.dept_code,
                      t2.channel_code,
                      t2.channel_name,
                      t2.tel,
                      t2.mobile,
                      t2.sex,
                      t2.birthday,
                      t2.educatioin,
                      t2.created_date,
                      t2.qualification_expire_date
                 from channel_main t1, channel_agent_detail t2
                where 1 = 1
                  and t1.valid_ind = '1'
                  and t2.valid_ind = '1'
                  and t1.channel_code = t2.channel_code
                  and (t2.channel_name like '%2015%' or 
                       t2.channel_name like '%2016%' or
                       t2.channel_name like '%2017%')
                ) t11
           left join channel_recommender_detail t3
             on t11.channel_code = t3.channel_code
            and t3.valid_ind = '1'
           left join educatioin t4
             on t11.educatioin = t4.educatioin_code
            and t4.valid_ind = '1'
           left join department t5
             on t11.dept_code = t5.dept_code
            and t5.valid_ind = '1'
           left join department d1
             on d1.dept_code = substr(t11.dept_code, 0, 2)
           left join department d2
             on d2.dept_code = substr(t11.dept_code, 0, 4)
           left join (select c2.*
                        from (select c.*,
                                     max(c.expire_date) over(partition by c.channel_code) max_expire_date
                                from channel_confer c) c2
                       where c2.max_expire_date = c2.expire_date) t6
             on t11.channel_code = t6.channel_code
             and t6.valid_ind = '1'
           left join salesman t7
             on t3.recommender_code = t7.employ_code
             and t7.valid_ind = '1'
           left join department d3
             on d3.dept_code = t7.dept_code
            and d3.valid_ind = '1'
           left join group_main t8
             on t7.group_code = t8.group_code
             and t8.valid_ind = '1'
           where 1 = 1
     ]]>
	 <if test="deptCodeTwo != null and deptCodeTwo != ''">
	       and substr(t11.dept_code, 0, 2) = #{deptCodeTwo,jdbcType=VARCHAR}
	 </if>
	 <if test="deptCodeThree != null and deptCodeThree != ''">
	       and substr(t11.dept_code, 0, 4) = #{deptCodeThree,jdbcType=VARCHAR}
	 </if>
	 <if test="deptCodeFour != null and deptCodeFour != ''">
	       and substr(t11.dept_code, 0, 8) = #{deptCodeFour,jdbcType=VARCHAR}
	 </if>
	 <if test="groupName != null and groupName != ''">
	       and t8.group_name like '%' || trim(#{groupName,jdbcType=VARCHAR}) || '%'  
	 </if>
	 <if test="channelCode != null and channelCode != ''">
	       and t11.channel_code like '%' || trim(#{channelCode,jdbcType=VARCHAR}) || '%' 
	 </if>
	 <if test="channelName != null and channelName != ''">
	       and t11.channel_name like '%' || trim(#{channelName,jdbcType=VARCHAR}) || '%'  
	 </if>
	 <if test="reportDateBgn != null and reportDateBgn != '' ">
	      and <![CDATA[ t11.created_date >= to_date(#{reportDateBgn,jdbcType=VARCHAR},'yyyy-mm-dd') ]]> 
	 </if>
	 <if test="reportDateEnd != null and reportDateEnd != '' ">
	      and <![CDATA[ t11.created_date <= to_date(#{reportDateEnd,jdbcType=VARCHAR},'yyyy-mm-dd')+1 ]]> 
	 </if>
     <if test="salesEmpty != null and salesEmpty != ''">
        <choose>
           <when test="salesEmpty == 1">and t3.recommender_code is null</when>
           <when test="salesEmpty == 0">and t3.recommender_code is not null</when>
           <otherwise></otherwise>
        </choose>
     </if>
     <if test="salesStatus != null and salesStatus != ''">
        <choose>
           <when test="salesStatus == 1">and t7.status = '1'</when>
           <when test="salesStatus == 0">and t7.status != '1'</when>
           <otherwise></otherwise>
        </choose>
     </if>
	 <if test="certifyValid != null and certifyValid != ''">
	     <if test="certifyValid == 0"> <!-- 未过期 -->
	         <![CDATA[
	            and  t11.QUALIFICATION_EXPIRE_DATE is not null and  t11.QUALIFICATION_EXPIRE_DATE >= trunc(sysdate) 
	            and (select case
	                             when max(clcr.expire_date) is not null and
	                                  max(clcr.expire_date) > sysdate then
	                              '1'
	                             else
	                              '0'
	                           end
	                      from CHANNEL_CONFER clcr
	                     where clcr.CHANNEL_CODE = t11.channel_code
	                       and clcr.VALID_IND = '1') = '1'
	         ]]>
         </if>
         <if test="certifyValid == 1"> <!-- 已过期 -->
         <![CDATA[
           and (t11.qualification_expire_date is null or t11.QUALIFICATION_EXPIRE_DATE < trunc(sysdate) or (select case
                         when max(clcr.expire_date) is null or
                              max(clcr.expire_date) < sysdate then
                          '1'
                         else
                          '0'
                       end
                  from CHANNEL_CONFER clcr
                 where clcr.CHANNEL_CODE = t11.channel_code
                   and clcr.VALID_IND = '1') = '1')   
            ]]>
         </if>
       </if>
       order by t11.created_date desc
	</select>
	
	<!-- 查询全民营销代理人数据 (不带分页) -->
	<select id="queryAgentALLCount" parameterType="map" resultType="long">
	   select count(1) 
	      from (
	          select t1.dept_code,
	                 t2.channel_code,
	                 t2.channel_name,
	                 t2.tel,
	                 t2.mobile,
	                 t2.sex,
	                 t2.birthday,
	                 t2.educatioin,
	                 t2.created_date,
	                 t2.qualification_expire_date
	            from channel_main t1, channel_agent_detail t2
	           where 1 = 1
	             and t1.valid_ind = '1'
	             and t2.valid_ind = '1'
	             and t1.channel_code = t2.channel_code
	             and (t2.channel_name like '%2015%' or 
	                  t2.channel_name like '%2016%' or
	                  t2.channel_name like '%2017%'
	                 )
	           ) t11
	      left join channel_recommender_detail t3
	        on t11.channel_code = t3.channel_code
	       and t3.valid_ind = '1'
	      left join educatioin t4
	        on t11.educatioin = t4.educatioin_code
	       and t4.valid_ind = '1'
	      left join department t5
	        on t11.dept_code = t5.dept_code
	       and t5.valid_ind = '1'
	      left join department d1
	        on d1.dept_code = substr(t11.dept_code, 0, 2)
	      left join department d2
	        on d2.dept_code = substr(t11.dept_code, 0, 4)
	      left join (select c2.*
	                   from (select c.*,
	                                max(c.expire_date) over(partition by c.channel_code) max_expire_date
	                           from channel_confer c) c2
	                  where c2.max_expire_date = c2.expire_date) t6
	        on t11.channel_code = t6.channel_code
	        and t6.valid_ind = '1'
	      left join salesman t7
	        on t3.recommender_code = t7.employ_code
	        and t7.valid_ind = '1'
	      left join department d3
	        on d3.dept_code = t7.dept_code
	       and d3.valid_ind = '1'
	      left join group_main t8
	        on t7.group_code = t8.group_code
	        and t8.valid_ind = '1'
	      where 1 = 1
	<if test="deptCodeTwo != null and deptCodeTwo != ''">
	      and substr(t11.dept_code, 0, 2) = #{deptCodeTwo,jdbcType=VARCHAR}
	</if>
	<if test="deptCodeThree != null and deptCodeThree != ''">
	      and substr(t11.dept_code, 0, 4) = #{deptCodeThree,jdbcType=VARCHAR}
	</if>
	<if test="deptCodeFour != null and deptCodeFour != ''">
	      and substr(t11.dept_code, 0, 8) = #{deptCodeFour,jdbcType=VARCHAR}
	</if>
	<if test="deptCodeFour != null and deptCodeFour != ''">
	      and substr(t11.dept_code, 0, 8) = #{deptCodeFour,jdbcType=VARCHAR}
	</if>
	<if test="groupName != null and groupName != ''">
	      and t8.group_name like '%' || trim(#{groupName,jdbcType=VARCHAR}) || '%'  
	</if>
	<if test="channelCode != null and channelCode != ''">
	      and t11.channel_code like '%' || trim(#{channelCode,jdbcType=VARCHAR}) || '%' 
	</if>
	<if test="channelName != null and channelName != ''">
	      and t11.channel_name like '%' || trim(#{channelName,jdbcType=VARCHAR}) || '%'  
	</if>
	<if test="reportDateBgn != null and reportDateBgn != '' ">
	     and <![CDATA[ t11.created_date >= to_date(#{reportDateBgn,jdbcType=VARCHAR},'yyyy-mm-dd') ]]> 
	</if>
	<if test="reportDateEnd != null and reportDateEnd != '' ">
	     and <![CDATA[ t11.created_date <= to_date(#{reportDateEnd,jdbcType=VARCHAR},'yyyy-mm-dd')+1 ]]> 
	</if>
	<if test="salesEmpty != null and salesEmpty != ''">
	   <choose>
	      <when test="salesEmpty == 1">and t3.recommender_code is null</when>
	      <when test="salesEmpty == 0">and t3.recommender_code is not null</when>
	      <otherwise></otherwise>
	   </choose>
	</if>
	<if test="salesStatus != null and salesStatus != ''">
	   <choose>
	      <when test="salesStatus == 1">and t7.status = '1'</when>
	      <when test="salesStatus == 0">and t7.status != '1'</when>
	      <otherwise></otherwise>
	   </choose>
	</if>
	<if test="certifyValid != null and certifyValid != ''">
	        <if test="certifyValid == 0"> <!-- 未过期 -->
	     <![CDATA[
	        and  t11.QUALIFICATION_EXPIRE_DATE is not null and  t11.QUALIFICATION_EXPIRE_DATE >= trunc(sysdate) 
	        and (select case
	                         when max(clcr.expire_date) is not null and
	                              max(clcr.expire_date) > sysdate then
	                          '1'
	                         else
	                          '0'
	                       end
	                  from CHANNEL_CONFER clcr
	                 where clcr.CHANNEL_CODE = t11.channel_code
	                   and clcr.VALID_IND = '1') = '1'
	     ]]>
	     </if>
	     <if test="certifyValid == 1"> <!-- 已过期 -->
	     <![CDATA[
	       and (t11.qualification_expire_date is null or t11.QUALIFICATION_EXPIRE_DATE < trunc(sysdate) or (select case
	                     when max(clcr.expire_date) is null or
	                          max(clcr.expire_date) < sysdate then
	                      '1'
	                     else
	                      '0'
	                   end
	              from CHANNEL_CONFER clcr
	             where clcr.CHANNEL_CODE = t11.channel_code
	               and clcr.VALID_IND = '1') = '1')   
	        ]]>
	     </if>
	   </if>
	</select>
</mapper>
