<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sinosafe.xszc.law.vo.TLawOriginRate" >
	<resultMap id="BaseResultMap" type="java.util.HashMap">
		<id column="ORIGIN_RATE_ID" property="originRateId" javaType="java.lang.String" jdbcType="VARCHAR" />
		<result column="UPDATED_USER" property="updatedUser" jdbcType="VARCHAR" javaType="java.lang.String" />
 		<result column="VALID_IND" property="validInd" jdbcType="CHAR" javaType="java.lang.String" />
 		<result column="CREATED_DATE" property="createdDate" jdbcType="DATE" javaType="java.sql.Timestamp" />
 		<result column="WORK_FALG" property="workFalg" jdbcType="CHAR" javaType="java.lang.String" />
 		<result column="BIZ_TYPE" property="bizType" jdbcType="CHAR" javaType="java.lang.String" />
  		<result column="CREATED_USER" property="createdUser" jdbcType="VARCHAR" javaType="java.lang.String" />
 		<result column="ORIGIN_TYPE" property="originType" jdbcType="CHAR" javaType="java.lang.String" />
 		<result column="UPDATED_DATE" property="updatedDate" jdbcType="DATE" javaType="java.sql.Timestamp" />
 		<result column="ORIGIN_RATE" property="originRate" jdbcType="DOUBLE" javaType="java.lang.Double" />
 		<result column="DEPT_CODE_2" property="deptCode2" jdbcType="VARCHAR" javaType="java.lang.String" />
 	</resultMap>
	
	<resultMap id="BaseResultVo" type="com.sinosafe.xszc.law.vo.TLawOriginRate">
		<id column="ORIGIN_RATE_ID" property="originRateId" javaType="java.lang.String" jdbcType="VARCHAR" />
		<result column="UPDATED_USER" property="updatedUser" jdbcType="VARCHAR" javaType="java.lang.String" />
 		<result column="VALID_IND" property="validInd" jdbcType="CHAR" javaType="java.lang.String" />
 		<result column="CREATED_DATE" property="createdDate" jdbcType="DATE" javaType="java.sql.Timestamp" />
 		<result column="WORK_FALG" property="workFalg" jdbcType="CHAR" javaType="java.lang.String" />
 		<result column="BIZ_TYPE" property="bizType" jdbcType="CHAR" javaType="java.lang.String" />
  		<result column="CREATED_USER" property="createdUser" jdbcType="VARCHAR" javaType="java.lang.String" />
 		<result column="ORIGIN_TYPE" property="originType" jdbcType="CHAR" javaType="java.lang.String" />
 		<result column="UPDATED_DATE" property="updatedDate" jdbcType="DATE" javaType="java.sql.Timestamp" />
 		<result column="ORIGIN_RATE" property="originRate" jdbcType="DOUBLE" javaType="java.lang.Double" />
 		<result column="DEPT_CODE_2" property="deptCode2" jdbcType="VARCHAR" javaType="java.lang.String" />
 	</resultMap>

	<!-- 查询数据列Sql不转换成对应的Java命名 -->
	<sql id="Base_Column_List" >
		UPDATED_USER,
		VALID_IND,
		CREATED_DATE,
		WORK_FALG,
		BIZ_TYPE,
		ORIGIN_RATE_ID,
		CREATED_USER,
		ORIGIN_TYPE,
		UPDATED_DATE,
		ORIGIN_RATE,
		DEPT_CODE_2
	</sql>
	
	<!-- 分页查询用到 -->
	<sql id="Base_Column_Lists" >
		tlor.UPDATED_USER,
		tlor.VALID_IND,
		tlor.CREATED_DATE,
		tlor.WORK_FALG,
		tlor.BIZ_TYPE,
		tlor.ORIGIN_RATE_ID,
		tlor.CREATED_USER,
		tlor.ORIGIN_TYPE,
		tlor.UPDATED_DATE,
		tlor.ORIGIN_RATE,
		tlor.DEPT_CODE_2
	</sql>
	
	<!-- 查询数据列Sql换成对应的Java命名 -->
	<sql id="Base_Column_List_JavaName" >
		UPDATED_USER as "updatedUser",
		VALID_IND as "validInd",
		CREATED_DATE as "createdDate",
		WORK_FALG as "workFalg",
		BIZ_TYPE as "bizType",
		ORIGIN_RATE_ID as "originRateId",
		CREATED_USER as "createdUser",
		ORIGIN_TYPE as "originType",
		UPDATED_DATE as "updatedDate",
		ORIGIN_RATE as "originRate",
		DEPT_CODE_2 as "deptCode2"
	</sql>
	
	<!-- 写入操作的SQL -->
	<sql id="Insert_Base_values">
		#{updatedUser,jdbcType=VARCHAR},
 		#{validInd,jdbcType=CHAR},
 		sysdate,
 		#{workFalg,jdbcType=CHAR},
 		#{bizType,jdbcType=CHAR},
 		#{originRateId,jdbcType=VARCHAR},
 		#{createdUser,jdbcType=VARCHAR},
 		#{originType,jdbcType=CHAR},
 		sysdate,
 		#{originRate,jdbcType=DOUBLE},
 		#{deptCode2,jdbcType=VARCHAR}
 	</sql>
	
		<!-- 查询条件的sql -->
	<sql id="Base_Where_Sqls">
		<if test="updatedUser != null and updatedUser != ''">
			and tlor.UPDATED_USER = #{updatedUser,jdbcType=VARCHAR}
		</if>
		<if test="validInd != null and validInd != ''">
			and tlor.VALID_IND = #{validInd,jdbcType=CHAR}
		</if>
		<if test="createdDate != null and createdDate != ''">
			and tlor.CREATED_DATE = #{createdDate,jdbcType=DATE}
		</if>
		<if test="workFalg != null and workFalg != ''">
			and tlor.WORK_FALG = #{workFalg,jdbcType=CHAR}
		</if>
		<if test="bizType != null and bizType != ''">
			and tlor.BIZ_TYPE = #{bizType,jdbcType=CHAR}
		</if>
		<if test="originRateId != null and originRateId != ''">
			and tlor.ORIGIN_RATE_ID = #{originRateId,jdbcType=VARCHAR}
		</if>
		<if test="createdUser != null and createdUser != ''">
			and tlor.CREATED_USER = #{createdUser,jdbcType=VARCHAR}
		</if>
		<if test="originType != null and originType != ''">
			and tlor.ORIGIN_TYPE = #{originType,jdbcType=CHAR}
		</if>
		<if test="updatedDate != null and updatedDate != ''">
			and tlor.UPDATED_DATE = #{updatedDate,jdbcType=DATE}
		</if>
		<if test="originRate != null and originRate != ''">
			and tlor.ORIGIN_RATE = #{originRate,jdbcType=DOUBLE}
		</if>
		<if test="deptCode2 != null and deptCode2 != ''">
			and tlor.DEPT_CODE_2 = #{deptCode2,jdbcType=VARCHAR}
		</if>
	</sql>
	
	<!-- 查询条件的sql -->
	<sql id="Base_Where_Sql">
		<where>
		<if test="updatedUser != null and updatedUser != ''">
			and tlor.UPDATED_USER = #{updatedUser,jdbcType=VARCHAR}
		</if>
		<if test="validInd != null and validInd != ''">
			and tlor.VALID_IND = #{validInd,jdbcType=CHAR}
		</if>
		<if test="createdDate != null and createdDate != ''">
			and tlor.CREATED_DATE = #{createdDate,jdbcType=DATE}
		</if>
		<if test="workFalg != null and workFalg != ''">
			and tlor.WORK_FALG = #{workFalg,jdbcType=CHAR}
		</if>
		<if test="bizType != null and bizType != ''">
			and tlor.BIZ_TYPE = #{bizType,jdbcType=CHAR}
		</if>
		<if test="originRateId != null and originRateId != ''">
			and tlor.ORIGIN_RATE_ID = #{originRateId,jdbcType=VARCHAR}
		</if>
		<if test="createdUser != null and createdUser != ''">
			and tlor.CREATED_USER = #{createdUser,jdbcType=VARCHAR}
		</if>
		<if test="originType != null and originType != ''">
			and tlor.ORIGIN_TYPE = #{originType,jdbcType=CHAR}
		</if>
		<if test="updatedDate != null and updatedDate != ''">
			and tlor.UPDATED_DATE = #{updatedDate,jdbcType=DATE}
		</if>
		<if test="originRate != null and originRate != ''">
			and tlor.ORIGIN_RATE = #{originRate,jdbcType=DOUBLE}
		</if>
		<if test="deptCode2 != null and deptCode2 != ''">
			and tlor.DEPT_CODE_2 = #{deptCode2,jdbcType=VARCHAR}
		</if>
		</where>
	</sql>
	
	<!-- 
		insert操作给定的参数是java.util.Map<String,Object>类型的对象，
		与<sql id="Insert_Base_values">中配置的列一致
	-->
	<insert id="insertVo" parameterType="com.sinosafe.xszc.law.vo.TLawOriginRate" >
    insert into T_LAW_ORIGIN_RATE (
		<include refid="Base_Column_List" />
    )
	values (
		<include refid="Insert_Base_values" />
    )
	</insert>
	
	<!-- 
		insert操作给定的参数是java.util.Map<String,Object>类型的对象，
		与<sql id="Insert_Base_values">中配置的列一致
	-->
	<insert id="insert" parameterType="map" >
    insert into T_LAW_ORIGIN_RATE (
		<include refid="Base_Column_List" />
    )
	values (
		<include refid="Insert_Base_values" />
    )
	</insert>

	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from T_LAW_ORIGIN_RATE
    where ORIGIN_RATE_ID = #{originRateId,jdbcType=VARCHAR}
	</delete>
<!-- 
	<delete id="deleteByDataKey" parameterType="long">
    delete from T_LAW_ORIGIN_RATE
    where PK_SERIAL = #{data}
	</delete>
 -->
	<update id="updateByPrimaryKeySelective" parameterType="map" >
	update T_LAW_ORIGIN_RATE
	<set>
	<if test="updatedUser != null and updatedUser != ''">
		UPDATED_USER = #{updatedUser,jdbcType=VARCHAR},
	</if>
  	<if test="validInd != null and validInd != ''">
		VALID_IND = #{validInd,jdbcType=CHAR},
	</if>
  	<if test="createdDate != null and createdDate != ''">
		CREATED_DATE = #{createdDate,jdbcType=DATE},
	</if>
  	<if test="workFalg != null and workFalg != ''">
		WORK_FALG = #{workFalg,jdbcType=CHAR},
	</if>
  	<if test="bizType != null and bizType != ''">
		BIZ_TYPE = #{bizType,jdbcType=CHAR},
	</if>
   	<if test="createdUser != null and createdUser != ''">
		CREATED_USER = #{createdUser,jdbcType=VARCHAR},
	</if>
  	<if test="originType != null and originType != ''">
		ORIGIN_TYPE = #{originType,jdbcType=CHAR},
	</if>
  	<if test="updatedDate != null and updatedDate != ''">
		UPDATED_DATE = #{updatedDate,jdbcType=DATE},
	</if>
  	<if test="originRate != null and originRate != ''">
		ORIGIN_RATE = #{originRate,jdbcType=DOUBLE},
	</if>
  	<if test="deptCode2 != null and deptCode2 != ''">
		DEPT_CODE_2 = #{deptCode2,jdbcType=VARCHAR}
	</if>
  	</set>
	where ORIGIN_RATE_ID = #{originRateId,jdbcType=VARCHAR}
	</update>
	
	<update id="updateByPrimaryKey" parameterType="map" >
		update T_LAW_ORIGIN_RATE
		set 
			UPDATED_USER = #{updatedUser,jdbcType=VARCHAR},
  			VALID_IND = #{validInd,jdbcType=CHAR},
  			CREATED_DATE = #{createdDate,jdbcType=DATE},
  			WORK_FALG = #{workFalg,jdbcType=CHAR},
  			BIZ_TYPE = #{bizType,jdbcType=CHAR},
   			CREATED_USER = #{createdUser,jdbcType=VARCHAR},
  			ORIGIN_TYPE = #{originType,jdbcType=CHAR},
  			UPDATED_DATE = #{updatedDate,jdbcType=DATE},
  			ORIGIN_RATE = #{originRate,jdbcType=DOUBLE},
  			DEPT_CODE_2 = #{deptCode2,jdbcType=VARCHAR}
  		where ORIGIN_RATE_ID = #{originRateId,jdbcType=VARCHAR}
	</update>

	<update id="updateByPrimaryKeySelectiveVo" parameterType="com.sinosafe.xszc.law.vo.TLawOriginRate" >
	update T_LAW_ORIGIN_RATE
	<set>
	<if test="updatedUser != null and updatedUser != ''">
		UPDATED_USER = #{updatedUser,jdbcType=VARCHAR},
	</if>
  	<if test="validInd != null and validInd != ''">
		VALID_IND = #{validInd,jdbcType=CHAR},
	</if>
  	<if test="createdDate != null and createdDate != ''">
		CREATED_DATE = #{createdDate,jdbcType=DATE},
	</if>
  	<if test="workFalg != null and workFalg != ''">
		WORK_FALG = #{workFalg,jdbcType=CHAR},
	</if>
  	<if test="bizType != null and bizType != ''">
		BIZ_TYPE = #{bizType,jdbcType=CHAR},
	</if>
   	<if test="createdUser != null and createdUser != ''">
		CREATED_USER = #{createdUser,jdbcType=VARCHAR},
	</if>
  	<if test="originType != null and originType != ''">
		ORIGIN_TYPE = #{originType,jdbcType=CHAR},
	</if>
  	<if test="updatedDate != null and updatedDate != ''">
		UPDATED_DATE = #{updatedDate,jdbcType=DATE},
	</if>
  	<if test="originRate != null and originRate != ''">
		ORIGIN_RATE = #{originRate,jdbcType=DOUBLE},
	</if>
  	<if test="deptCode2 != null and deptCode2 != ''">
		DEPT_CODE_2 = #{deptCode2,jdbcType=VARCHAR}
	</if>
  	</set>
	where ORIGIN_RATE_ID = #{originRateId,jdbcType=VARCHAR}
	</update>
	
	<update id="updateByPrimaryKeyVo" parameterType="com.sinosafe.xszc.law.vo.TLawOriginRate" >
		update T_LAW_ORIGIN_RATE
		set 
			UPDATED_USER = #{updatedUser,jdbcType=VARCHAR},
  			WORK_FALG = #{workFalg,jdbcType=CHAR},
  			BIZ_TYPE = #{bizType,jdbcType=CHAR},
  			ORIGIN_TYPE = #{originType,jdbcType=CHAR},
  			UPDATED_DATE = sysdate,
  			ORIGIN_RATE = #{originRate,jdbcType=DOUBLE},
  			DEPT_CODE_2 = #{deptCode2,jdbcType=VARCHAR}
  		where ORIGIN_RATE_ID = #{originRateId,jdbcType=VARCHAR}
	</update>

	<!-- 根据Id查询一条数据 -->
	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select <include refid="Base_Column_Lists" />,
    		        dt.dept_simple_name "deptName"
		from T_LAW_ORIGIN_RATE tlor
				inner join department dt on tlor.dept_code_2 = dt.dept_code and dt.valid_ind = 1
	where tlor.ORIGIN_RATE_ID = #{originRateId,jdbcType=VARCHAR}
	</select>
	<!-- 根据Id查询一条数据 -->
	<select id="selectByPrimaryKeyVo" resultMap="BaseResultVo" parameterType="java.lang.String" >
    select <include refid="Base_Column_List" />
	from T_LAW_ORIGIN_RATE
	where ORIGIN_RATE_ID = #{originRateId,jdbcType=VARCHAR}
	</select>

	<!-- 条件查询总数据量 -->
	<select id="queryCount" parameterType="map" resultType="long">
	select count(1)
			from T_LAW_ORIGIN_RATE tlor
				inner join department dt on tlor.dept_code_2 = dt.dept_code and dt.valid_ind = 1
				where tlor.valid_ind = '1'
	 <include refid="Base_Where_Sqls" />
	</select>
	
	<!-- 条件查询总数据量 -->
	<select id="queryCountVo" parameterType="com.sinosafe.xszc.law.vo.TLawOriginRate" resultType="long">
	select count(1)
	from T_LAW_ORIGIN_RATE <include refid="Base_Where_Sql" />
	</select>

	<!-- 单独条件分页查询语句,注意下面语句中的endpoint和startpoint这两个名称不可修改，否则将导致sql错误 -->
	<select id="queryListPage" parameterType="map" resultMap="BaseResultMap">
	select * from (
		select a.*,rownum rn from (
		select 
		<include refid="Base_Column_Lists"/>,
		        dt.dept_simple_name "deptName"
		from T_LAW_ORIGIN_RATE tlor
				inner join department dt on tlor.dept_code_2 = dt.dept_code and dt.valid_ind = 1
				where tlor.valid_ind = '1'
		<include refid="Base_Where_Sqls"/>
			order by tlor.updated_date desc
		) a where rownum &lt;= #{endpoint}
	) where rn &gt;= #{startpoint}
	</select>
	
	<!-- 单独条件分页查询语句,注意下面语句中的endpoint和startpoint这两个名称不可修改，否则将导致sql错误 -->
	<select id="queryListPageVo" parameterType="map" resultMap="BaseResultVo">
	select * from (
		select a.*,rownum rn from (
		select 
		<include refid="Base_Column_List"/>
		from T_LAW_ORIGIN_RATE
		<include refid="Base_Where_Sql"/>
		) a where rownum &lt;= #{endpoint}
	) where rn &gt;= #{startpoint}
	</select>
	
	<!-- 条件查询 -->
	<select id="query" parameterType="map" resultMap="BaseResultMap">
		select 
		<include refid="Base_Column_List"/>
		from T_LAW_ORIGIN_RATE
		<include refid="Base_Where_Sql"/>
	</select>
	
	<!-- 条件查询 -->
	<select id="queryVo" parameterType="map" resultMap="BaseResultVo">
		select 
		<include refid="Base_Column_List"/>
		from T_LAW_ORIGIN_RATE
		<include refid="Base_Where_Sql"/>
	</select>
	
	<!-- 综合条件分页查询语句,注意下面语句中的endpoint和startpoint这两个名称不可修改，否则将导致sql错误 -->
	<select id="queryPage" parameterType="map" resultMap="BaseResultMap">
	<choose>
		<when test="endpoint!=null and endpoint != '' and startpoint != null and startpoint != ''">
		select * from (
			select a.*,rownum rn from (
				select 
				<include refid="Base_Column_List"/>
				from T_LAW_ORIGIN_RATE
				<include refid="Base_Where_Sql"/>
			) a where rownum &lt;= #{endpoint}
		) where rn &gt;= #{startpoint}
		</when>
		<otherwise>
		<!-- 这里的"count"重命名不可修改，否则会出现异常 -->
		select count(1) "count" from T_LAW_ORIGIN_RATE <include refid="Base_Where_Sql" />
		</otherwise>
	</choose>
	</select>
	
	<!-- 删除 -->
	<update id="deleteByPrimaryKeyVo" parameterType="com.sinosafe.xszc.law.vo.TLawOriginRate" >
 		update T_LAW_ORIGIN_RATE
		set 
  			VALID_IND = '0',
  			UPDATED_DATE = sysdate,
        	UPDATED_USER=#{updatedUser,jdbcType=VARCHAR}
  		where ORIGIN_RATE_ID = #{originRateId,jdbcType=VARCHAR}
	</update>
	
</mapper>
