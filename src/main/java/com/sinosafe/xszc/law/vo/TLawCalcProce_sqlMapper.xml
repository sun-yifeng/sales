<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sinosafe.xszc.law.vo.TLawCalcProce" >
	<resultMap id="BaseResultMap" type="java.util.HashMap">
		<id column="PK_ID" property="pkId" javaType="java.lang.String" jdbcType="VARCHAR" />
		<result column="UPDATED_USER" property="updatedUser" jdbcType="VARCHAR" javaType="java.lang.String" />
 		<result column="LINE_CODE" property="lineCode" jdbcType="CHAR" javaType="java.lang.String" />
  		<result column="CREATED_USER" property="createdUser" jdbcType="VARCHAR" javaType="java.lang.String" />
 		<result column="DEPT_CODE" property="deptCode" jdbcType="CHAR" javaType="java.lang.String" />
 		<result column="UPDATED_DATE" property="updatedDate" jdbcType="DATE" javaType="java.sql.Timestamp" />
 		<result column="CALC_CODE" property="calcCode" jdbcType="VARCHAR" javaType="java.lang.String" />
 		<result column="VALID_IND" property="validInd" jdbcType="CHAR" javaType="java.lang.String" />
 		<result column="CALC_TYPE" property="calcType" jdbcType="CHAR" javaType="java.lang.String" />
 		<result column="CREATED_DATE" property="createdDate" jdbcType="DATE" javaType="java.sql.Timestamp" />
 		<result column="CALC_NOTE" property="calcNote" jdbcType="VARCHAR" javaType="java.lang.String" />
 		<result column="CALC_COND" property="calcCond" jdbcType="VARCHAR" javaType="java.lang.String" />
 		<result column="CALC_MONTH" property="calcMonth" jdbcType="CHAR" javaType="java.lang.String" />
 		<result column="CALC_RESULT" property="calcResult" jdbcType="DOUBLE" javaType="java.lang.Double" />
 		<result column="SALES_CODE" property="salesCode" jdbcType="VARCHAR" javaType="java.lang.String" />
 	</resultMap>
	
	<resultMap id="BaseResultVo" type="com.sinosafe.xszc.law.vo.TLawCalcProce">
		<id column="PK_ID" property="pkId" javaType="java.lang.String" jdbcType="VARCHAR" />
		<result column="UPDATED_USER" property="updatedUser" jdbcType="VARCHAR" javaType="java.lang.String" />
 		<result column="LINE_CODE" property="lineCode" jdbcType="CHAR" javaType="java.lang.String" />
  		<result column="CREATED_USER" property="createdUser" jdbcType="VARCHAR" javaType="java.lang.String" />
 		<result column="DEPT_CODE" property="deptCode" jdbcType="CHAR" javaType="java.lang.String" />
 		<result column="UPDATED_DATE" property="updatedDate" jdbcType="DATE" javaType="java.sql.Timestamp" />
 		<result column="CALC_CODE" property="calcCode" jdbcType="VARCHAR" javaType="java.lang.String" />
 		<result column="VALID_IND" property="validInd" jdbcType="CHAR" javaType="java.lang.String" />
 		<result column="CALC_TYPE" property="calcType" jdbcType="CHAR" javaType="java.lang.String" />
 		<result column="CREATED_DATE" property="createdDate" jdbcType="DATE" javaType="java.sql.Timestamp" />
 		<result column="CALC_NOTE" property="calcNote" jdbcType="VARCHAR" javaType="java.lang.String" />
 		<result column="CALC_COND" property="calcCond" jdbcType="VARCHAR" javaType="java.lang.String" />
 		<result column="CALC_MONTH" property="calcMonth" jdbcType="CHAR" javaType="java.lang.String" />
 		<result column="CALC_RESULT" property="calcResult" jdbcType="DOUBLE" javaType="java.lang.Double" />
 		<result column="SALES_CODE" property="salesCode" jdbcType="VARCHAR" javaType="java.lang.String" />
 	</resultMap>

	<!-- 查询数据列Sql不转换成对应的Java命名 -->
	<sql id="Base_Column_List" >
		UPDATED_USER,
		LINE_CODE,
		PK_ID,
		CREATED_USER,
		DEPT_CODE,
		UPDATED_DATE,
		CALC_CODE,
		VALID_IND,
		CALC_TYPE,
		CREATED_DATE,
		CALC_NOTE,
		CALC_COND,
		CALC_MONTH,
		CALC_RESULT,
		SALES_CODE
	</sql>
	
	<!-- 查询数据列Sql换成对应的Java命名 -->
	<sql id="Base_Column_List_JavaName" >
		UPDATED_USER as "updatedUser",
		LINE_CODE as "lineCode",
		PK_ID as "pkId",
		CREATED_USER as "createdUser",
		DEPT_CODE as "deptCode",
		UPDATED_DATE as "updatedDate",
		CALC_CODE as "calcCode",
		VALID_IND as "validInd",
		CALC_TYPE as "calcType",
		CREATED_DATE as "createdDate",
		CALC_NOTE as "calcNote",
		CALC_COND as "calcCond",
		CALC_MONTH as "calcMonth",
		CALC_RESULT as "calcResult",
		SALES_CODE as "salesCode"
	</sql>
	
	<!-- 写入操作的SQL -->
	<sql id="Insert_Base_values">
		#{updatedUser,jdbcType=VARCHAR},
 		#{lineCode,jdbcType=CHAR},
 		#{pkId,jdbcType=VARCHAR},
 		#{createdUser,jdbcType=VARCHAR},
 		#{deptCode,jdbcType=CHAR},
 		#{updatedDate,jdbcType=DATE},
 		#{calcCode,jdbcType=VARCHAR},
 		#{validInd,jdbcType=CHAR},
 		#{calcType,jdbcType=CHAR},
 		#{createdDate,jdbcType=DATE},
 		#{calcNote,jdbcType=VARCHAR},
 		#{calcCond,jdbcType=VARCHAR},
 		#{calcMonth,jdbcType=CHAR},
 		#{calcResult,jdbcType=DOUBLE},
 		#{salesCode,jdbcType=VARCHAR}
 	</sql>
	
	<!-- 查询条件的sql -->
	<sql id="Base_Where_Sql">
		<where>
		<if test="updatedUser != null and updatedUser != ''">
			and UPDATED_USER = #{updatedUser,jdbcType=VARCHAR}
		</if>
		<if test="lineCode != null and lineCode != ''">
			and LINE_CODE = #{lineCode,jdbcType=CHAR}
		</if>
		<if test="pkId != null and pkId != ''">
			and PK_ID = #{pkId,jdbcType=VARCHAR}
		</if>
		<if test="createdUser != null and createdUser != ''">
			and CREATED_USER = #{createdUser,jdbcType=VARCHAR}
		</if>
		<if test="deptCode != null and deptCode != ''">
			and DEPT_CODE = #{deptCode,jdbcType=CHAR}
		</if>
		<if test="updatedDate != null and updatedDate != ''">
			and UPDATED_DATE = #{updatedDate,jdbcType=DATE}
		</if>
		<if test="calcCode != null and calcCode != ''">
			and CALC_CODE = #{calcCode,jdbcType=VARCHAR}
		</if>
		<if test="validInd != null and validInd != ''">
			and VALID_IND = #{validInd,jdbcType=CHAR}
		</if>
		<if test="calcType != null and calcType != ''">
			and CALC_TYPE = #{calcType,jdbcType=CHAR}
		</if>
		<if test="createdDate != null and createdDate != ''">
			and CREATED_DATE = #{createdDate,jdbcType=DATE}
		</if>
		<if test="calcNote != null and calcNote != ''">
			and CALC_NOTE = #{calcNote,jdbcType=VARCHAR}
		</if>
		<if test="calcCond != null and calcCond != ''">
			and CALC_COND = #{calcCond,jdbcType=VARCHAR}
		</if>
		<if test="calcMonth != null and calcMonth != ''">
			and CALC_MONTH = #{calcMonth,jdbcType=CHAR}
		</if>
		<if test="calcResult != null and calcResult != ''">
			and CALC_RESULT = #{calcResult,jdbcType=DOUBLE}
		</if>
		<if test="salesCode != null and salesCode != ''">
			and SALES_CODE = #{salesCode,jdbcType=VARCHAR}
		</if>
		</where>
	</sql>
	
	<!-- 
		insert操作给定的参数是java.util.Map<String,Object>类型的对象，
		与<sql id="Insert_Base_values">中配置的列一致
	-->
	<insert id="insertVo" parameterType="com.sinosafe.xszc.law.vo.TLawCalcProce" >
    insert into T_LAW_CALC_PROCE (
		<include refid="Base_Column_List" />
    )
	values (
		<include refid="Insert_Base_values" />
    )
	</insert>
	
	<!-- 
		insert操作给定的参数是java.util.Map<String,Object>类型的对象，
		与<sql id="Insert_Base_values">中配置的列一致
	-->
	<insert id="insert" parameterType="map" >
    insert into T_LAW_CALC_PROCE (
		<include refid="Base_Column_List" />
    )
	values (
		<include refid="Insert_Base_values" />
    )
	</insert>

	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from T_LAW_CALC_PROCE
    where PK_ID = #{pkId,jdbcType=VARCHAR}
	</delete>
<!-- 
	<delete id="deleteByDataKey" parameterType="long">
    delete from T_LAW_CALC_PROCE
    where PK_SERIAL = #{data}
	</delete>
 -->
	<update id="updateByPrimaryKeySelective" parameterType="map" >
	update T_LAW_CALC_PROCE
	<set>
	<if test="updatedUser != null and updatedUser != ''">
		UPDATED_USER = #{updatedUser,jdbcType=VARCHAR},
	</if>
  	<if test="lineCode != null and lineCode != ''">
		LINE_CODE = #{lineCode,jdbcType=CHAR},
	</if>
   	<if test="createdUser != null and createdUser != ''">
		CREATED_USER = #{createdUser,jdbcType=VARCHAR},
	</if>
  	<if test="deptCode != null and deptCode != ''">
		DEPT_CODE = #{deptCode,jdbcType=CHAR},
	</if>
  	<if test="updatedDate != null and updatedDate != ''">
		UPDATED_DATE = #{updatedDate,jdbcType=DATE},
	</if>
  	<if test="calcCode != null and calcCode != ''">
		CALC_CODE = #{calcCode,jdbcType=VARCHAR},
	</if>
  	<if test="validInd != null and validInd != ''">
		VALID_IND = #{validInd,jdbcType=CHAR},
	</if>
  	<if test="calcType != null and calcType != ''">
		CALC_TYPE = #{calcType,jdbcType=CHAR},
	</if>
  	<if test="createdDate != null and createdDate != ''">
		CREATED_DATE = #{createdDate,jdbcType=DATE},
	</if>
  	<if test="calcNote != null and calcNote != ''">
		CALC_NOTE = #{calcNote,jdbcType=VARCHAR},
	</if>
  	<if test="calcCond != null and calcCond != ''">
		CALC_COND = #{calcCond,jdbcType=VARCHAR},
	</if>
  	<if test="calcMonth != null and calcMonth != ''">
		CALC_MONTH = #{calcMonth,jdbcType=CHAR},
	</if>
  	<if test="calcResult != null and calcResult != ''">
		CALC_RESULT = #{calcResult,jdbcType=DOUBLE},
	</if>
  	<if test="salesCode != null and salesCode != ''">
		SALES_CODE = #{salesCode,jdbcType=VARCHAR}
	</if>
  	</set>
	where PK_ID = #{pkId,jdbcType=VARCHAR}
	</update>
	
	<update id="updateByPrimaryKey" parameterType="map" >
		update T_LAW_CALC_PROCE
		set 
			UPDATED_USER = #{updatedUser,jdbcType=VARCHAR},
  			LINE_CODE = #{lineCode,jdbcType=CHAR},
   			CREATED_USER = #{createdUser,jdbcType=VARCHAR},
  			DEPT_CODE = #{deptCode,jdbcType=CHAR},
  			UPDATED_DATE = #{updatedDate,jdbcType=DATE},
  			CALC_CODE = #{calcCode,jdbcType=VARCHAR},
  			VALID_IND = #{validInd,jdbcType=CHAR},
  			CALC_TYPE = #{calcType,jdbcType=CHAR},
  			CREATED_DATE = #{createdDate,jdbcType=DATE},
  			CALC_NOTE = #{calcNote,jdbcType=VARCHAR},
  			CALC_COND = #{calcCond,jdbcType=VARCHAR},
  			CALC_MONTH = #{calcMonth,jdbcType=CHAR},
  			CALC_RESULT = #{calcResult,jdbcType=DOUBLE},
  			SALES_CODE = #{salesCode,jdbcType=VARCHAR}
  		where PK_ID = #{pkId,jdbcType=VARCHAR}
	</update>

	<update id="updateByPrimaryKeySelectiveVo" parameterType="com.sinosafe.xszc.law.vo.TLawCalcProce" >
	update T_LAW_CALC_PROCE
	<set>
	<if test="updatedUser != null and updatedUser != ''">
		UPDATED_USER = #{updatedUser,jdbcType=VARCHAR},
	</if>
  	<if test="lineCode != null and lineCode != ''">
		LINE_CODE = #{lineCode,jdbcType=CHAR},
	</if>
   	<if test="createdUser != null and createdUser != ''">
		CREATED_USER = #{createdUser,jdbcType=VARCHAR},
	</if>
  	<if test="deptCode != null and deptCode != ''">
		DEPT_CODE = #{deptCode,jdbcType=CHAR},
	</if>
  	<if test="updatedDate != null and updatedDate != ''">
		UPDATED_DATE = #{updatedDate,jdbcType=DATE},
	</if>
  	<if test="calcCode != null and calcCode != ''">
		CALC_CODE = #{calcCode,jdbcType=VARCHAR},
	</if>
  	<if test="validInd != null and validInd != ''">
		VALID_IND = #{validInd,jdbcType=CHAR},
	</if>
  	<if test="calcType != null and calcType != ''">
		CALC_TYPE = #{calcType,jdbcType=CHAR},
	</if>
  	<if test="createdDate != null and createdDate != ''">
		CREATED_DATE = #{createdDate,jdbcType=DATE},
	</if>
  	<if test="calcNote != null and calcNote != ''">
		CALC_NOTE = #{calcNote,jdbcType=VARCHAR},
	</if>
  	<if test="calcCond != null and calcCond != ''">
		CALC_COND = #{calcCond,jdbcType=VARCHAR},
	</if>
  	<if test="calcMonth != null and calcMonth != ''">
		CALC_MONTH = #{calcMonth,jdbcType=CHAR},
	</if>
  	<if test="calcResult != null and calcResult != ''">
		CALC_RESULT = #{calcResult,jdbcType=DOUBLE},
	</if>
  	<if test="salesCode != null and salesCode != ''">
		SALES_CODE = #{salesCode,jdbcType=VARCHAR}
	</if>
  	</set>
	where PK_ID = #{pkId,jdbcType=VARCHAR}
	</update>
	
	<update id="updateByPrimaryKeyVo" parameterType="com.sinosafe.xszc.law.vo.TLawCalcProce" >
		update T_LAW_CALC_PROCE
		set 
			UPDATED_USER = #{updatedUser,jdbcType=VARCHAR},
  			LINE_CODE = #{lineCode,jdbcType=CHAR},
   			CREATED_USER = #{createdUser,jdbcType=VARCHAR},
  			DEPT_CODE = #{deptCode,jdbcType=CHAR},
  			UPDATED_DATE = #{updatedDate,jdbcType=DATE},
  			CALC_CODE = #{calcCode,jdbcType=VARCHAR},
  			VALID_IND = #{validInd,jdbcType=CHAR},
  			CALC_TYPE = #{calcType,jdbcType=CHAR},
  			CREATED_DATE = #{createdDate,jdbcType=DATE},
  			CALC_NOTE = #{calcNote,jdbcType=VARCHAR},
  			CALC_COND = #{calcCond,jdbcType=VARCHAR},
  			CALC_MONTH = #{calcMonth,jdbcType=CHAR},
  			CALC_RESULT = #{calcResult,jdbcType=DOUBLE},
  			SALES_CODE = #{salesCode,jdbcType=VARCHAR}
  		where PK_ID = #{pkId,jdbcType=VARCHAR}
	</update>

	<!-- 根据Id查询一条数据 -->
	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select <include refid="Base_Column_List" />
	from T_LAW_CALC_PROCE
	where PK_ID = #{pkId,jdbcType=VARCHAR}
	</select>
	<!-- 根据Id查询一条数据 -->
	<select id="selectByPrimaryKeyVo" resultMap="BaseResultVo" parameterType="java.lang.String" >
    select <include refid="Base_Column_List" />
	from T_LAW_CALC_PROCE
	where PK_ID = #{pkId,jdbcType=VARCHAR}
	</select>

	<!-- 条件查询总数据量 -->
	<select id="queryCount" parameterType="map" resultType="long">
	select count(1)
	from T_LAW_CALC_PROCE <include refid="Base_Where_Sql" />
	</select>
	
	<!-- 条件查询总数据量 -->
	<select id="queryCountVo" parameterType="com.sinosafe.xszc.law.vo.TLawCalcProce" resultType="long">
	select count(1)
	from T_LAW_CALC_PROCE <include refid="Base_Where_Sql" />
	</select>

	<!-- 单独条件分页查询语句,注意下面语句中的endpoint和startpoint这两个名称不可修改，否则将导致sql错误 -->
	<select id="queryListPage" parameterType="map" resultMap="BaseResultMap">
	select * from (
		select a.*,rownum rn from (
		select 
		<include refid="Base_Column_List"/>
		from T_LAW_CALC_PROCE
		<include refid="Base_Where_Sql"/>
		) a where rownum &lt;= #{endpoint}
	) where rn &gt;= #{startpoint}
	</select>
	
	<!-- 单独条件分页查询语句,注意下面语句中的endpoint和startpoint这两个名称不可修改，否则将导致sql错误 -->
	<select id="queryListPageVo" parameterType="map" resultMap="BaseResultVo">
	select * from (
		select a.*,rownum rn from (
		select 
		<include refid="Base_Column_List"/>
		from T_LAW_CALC_PROCE
		<include refid="Base_Where_Sql"/>
		) a where rownum &lt;= #{endpoint}
	) where rn &gt;= #{startpoint}
	</select>
	
	<!-- 条件查询 -->
	<select id="query" parameterType="map" resultMap="BaseResultMap">
		select 
		<include refid="Base_Column_List"/>
		from T_LAW_CALC_PROCE
		<include refid="Base_Where_Sql"/>
	</select>
	
	<!-- 条件查询 -->
	<select id="queryVo" parameterType="map" resultMap="BaseResultVo">
		select 
		<include refid="Base_Column_List"/>
		from T_LAW_CALC_PROCE
		<include refid="Base_Where_Sql"/>
	</select>
	
	<!-- 综合条件分页查询语句,注意下面语句中的endpoint和startpoint这两个名称不可修改，否则将导致sql错误 -->
	<select id="queryPage" parameterType="map" resultMap="BaseResultMap">
	<choose>
		<when test="endpoint!=null and endpoint != '' and startpoint != null and startpoint != ''">
		select * from (
			select a.*,rownum rn from (
				select 
				<include refid="Base_Column_List"/>
				from T_LAW_CALC_PROCE
				<include refid="Base_Where_Sql"/>
			) a where rownum &lt;= #{endpoint}
		) where rn &gt;= #{startpoint}
		</when>
		<otherwise>
		<!-- 这里的"count"重命名不可修改，否则会出现异常 -->
		select count(1) "count" from T_LAW_CALC_PROCE <include refid="Base_Where_Sql" />
		</otherwise>
	</choose>
	</select>
	
	<!-- 查询计算过程 -->
	<select id="queryListProc" parameterType="map" resultType="map">
	select * from (
		select a.*,rownum rn from (
			select t1.calc_code   as "calcCode",
			       t1.calc_note   as "calcNote",
			       t1.calc_cond   as "calcCond",
			       to_char(t1.calc_result, 'fm99999999999990.0000') as "calcResult",
			       t1.calc_desc  as "indexNote"
			  from t_law_calc_proce t1
			 where t1.valid_ind = '1'
			   and t1.calc_type = #{calcType, jdbcType = VARCHAR}
			   and t1.calc_month = #{calcMonth, jdbcType = VARCHAR}
			   and t1.dept_code = #{deptCode, jdbcType = VARCHAR}
			   and t1.sales_code = #{salesCode, jdbcType = VARCHAR}
			   <if test="calcType == 1">
			   		order by t1.ORDER_NO asc,t1.calc_code asc
			   </if>
			 	<if test="calcType == 2">
			 		order by t1.created_date,t1.order_no
			 	</if>
		) a where rownum &lt;= 10000
	) where rn &gt;= 1
	</select>
	
	<!-- 查询考核过程 -->
	<select id="queryListRankPage" parameterType="map" resultType="map">
		select m.calc_code as "formulaCode", 
				m.calc_cond as "countCond", 
			    m.calc_desc as "calcDesc",
				m.reco_rank as "recoRank" 
			  from t_law_calc_proce m
			 where m.valid_ind = '1'
			   and m.calc_type = '3'
			   and m.dept_code = #{deptCode, jdbcType = VARCHAR}
			   and m.calc_month = #{calcMonth, jdbcType = VARCHAR}
			   and m.sales_code = #{salesCode, jdbcType = VARCHAR}
			   order by m.calc_code
	</select>
	
</mapper>
