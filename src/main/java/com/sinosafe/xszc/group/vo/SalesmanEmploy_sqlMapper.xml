<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sinosafe.xszc.group.vo.SalesmanEmploy" >
	<resultMap id="BaseResultMap" type="java.util.HashMap">
		<id column="PK_ID" property="pkId" javaType="java.lang.String" jdbcType="VARCHAR" />
		<result column="UPDATED_USER" property="updatedUser" jdbcType="VARCHAR" javaType="java.lang.String" />
 		<result column="VALID_IND" property="validInd" jdbcType="CHAR" javaType="java.lang.String" />
 		<result column="CREATED_DATE" property="createdDate" jdbcType="DATE" javaType="java.sql.Timestamp" />
 		<result column="ASSOCIATE_CODE" property="associateCode" jdbcType="VARCHAR" javaType="java.lang.String" />
  		<result column="SALESMAN_CODE" property="salesmanCode" jdbcType="VARCHAR" javaType="java.lang.String" />
 		<result column="CREATED_USER" property="createdUser" jdbcType="VARCHAR" javaType="java.lang.String" />
 		<result column="UPDATED_DATE" property="updatedDate" jdbcType="DATE" javaType="java.sql.Timestamp" />
 		<result column="EMPLOY_CODE" property="employCode" jdbcType="VARCHAR" javaType="java.lang.String" />
 		<result column="CERTIFY_NO" property="certifyNo" jdbcType="VARCHAR" javaType="java.lang.String" />
 		<result column="SALESMAN_CNAME" property="salesmanCname" jdbcType="VARCHAR" javaType="java.lang.String" />
 	</resultMap>
	
	<resultMap id="BaseResultVo" type="com.sinosafe.xszc.group.vo.SalesmanEmploy">
		<id column="PK_ID" property="pkId" javaType="java.lang.String" jdbcType="VARCHAR" />
		<result column="UPDATED_USER" property="updatedUser" jdbcType="VARCHAR" javaType="java.lang.String" />
 		<result column="VALID_IND" property="validInd" jdbcType="CHAR" javaType="java.lang.String" />
 		<result column="CREATED_DATE" property="createdDate" jdbcType="DATE" javaType="java.sql.Timestamp" />
 		<result column="ASSOCIATE_CODE" property="associateCode" jdbcType="VARCHAR" javaType="java.lang.String" />
  		<result column="SALESMAN_CODE" property="salesmanCode" jdbcType="VARCHAR" javaType="java.lang.String" />
 		<result column="CREATED_USER" property="createdUser" jdbcType="VARCHAR" javaType="java.lang.String" />
 		<result column="UPDATED_DATE" property="updatedDate" jdbcType="DATE" javaType="java.sql.Timestamp" />
 		<result column="EMPLOY_CODE" property="employCode" jdbcType="VARCHAR" javaType="java.lang.String" />
 		<result column="CERTIFY_NO" property="certifyNo" jdbcType="VARCHAR" javaType="java.lang.String" />
 		<result column="SALESMAN_CNAME" property="salesmanCname" jdbcType="VARCHAR" javaType="java.lang.String" />
 	</resultMap>

	<!-- 查询数据列Sql不转换成对应的Java命名 -->
	<sql id="Base_Column_List" >
		UPDATED_USER,
		VALID_IND,
		CREATED_DATE,
		ASSOCIATE_CODE,
		PK_ID,
		SALESMAN_CODE,
		CREATED_USER,
		UPDATED_DATE,
		EMPLOY_CODE,
		CERTIFY_NO,
		SALESMAN_CNAME
	</sql>
	
	<!-- 查询数据列Sql换成对应的Java命名 -->
	<sql id="Base_Column_List_JavaName" >
		UPDATED_USER as "updatedUser",
		VALID_IND as "validInd",
		CREATED_DATE as "createdDate",
		ASSOCIATE_CODE as "associateCode",
		PK_ID as "pkId",
		SALESMAN_CODE as "salesmanCode",
		CREATED_USER as "createdUser",
		UPDATED_DATE as "updatedDate",
		EMPLOY_CODE as "employCode",
		CERTIFY_NO as "certifyNo",
		SALESMAN_CNAME as "salesmanCname"
	</sql>
	
	<!-- 写入操作的SQL -->
	<sql id="Insert_Base_values">
		#{updatedUser,jdbcType=VARCHAR},
 		#{validInd,jdbcType=CHAR},
 		sysdate,
 		#{associateCode,jdbcType=VARCHAR},
 		#{pkId,jdbcType=VARCHAR},
 		#{salesmanCode,jdbcType=VARCHAR},
 		#{createdUser,jdbcType=VARCHAR},
 		sysdate,
 		#{employCode,jdbcType=VARCHAR},
 		#{certifyNo,jdbcType=VARCHAR},
 		#{salesmanCname,jdbcType=VARCHAR}
 	</sql>
	
	<!-- 查询条件的sql -->
	<sql id="Base_Where_Sql">
		<where>
		<if test="updatedUser != null and updatedUser != ''">
			and UPDATED_USER = #{updatedUser,jdbcType=VARCHAR}
		</if>
		<if test="validInd != null and validInd != ''">
			and VALID_IND = #{validInd,jdbcType=CHAR}
		</if>
		<if test="createdDate != null and createdDate != ''">
			and CREATED_DATE = #{createdDate,jdbcType=DATE}
		</if>
		<if test="associateCode != null and associateCode != ''">
			and ASSOCIATE_CODE = #{associateCode,jdbcType=VARCHAR}
		</if>
		<if test="pkId != null and pkId != ''">
			and PK_ID = #{pkId,jdbcType=VARCHAR}
		</if>
		<if test="salesmanCode != null and salesmanCode != ''">
			and SALESMAN_CODE = #{salesmanCode,jdbcType=VARCHAR}
		</if>
		<if test="createdUser != null and createdUser != ''">
			and CREATED_USER = #{createdUser,jdbcType=VARCHAR}
		</if>
		<if test="updatedDate != null and updatedDate != ''">
			and UPDATED_DATE = #{updatedDate,jdbcType=DATE}
		</if>
		<if test="employCode != null and employCode != ''">
			and EMPLOY_CODE = #{employCode,jdbcType=VARCHAR}
		</if>
		<if test="certifyNo != null and certifyNo != ''">
			and CERTIFY_NO = #{certifyNo,jdbcType=VARCHAR}
		</if>
		<if test="salesmanCname != null and salesmanCname != ''">
			and SALESMAN_CNAME = #{salesmanCname,jdbcType=VARCHAR}
		</if>
		</where>
	</sql>
	
	<!-- 
		insert操作给定的参数是java.util.Map<String,Object>类型的对象，
		与<sql id="Insert_Base_values">中配置的列一致
	-->
	<insert id="insertVo" parameterType="com.sinosafe.xszc.group.vo.SalesmanEmploy" >
    insert into SALESMAN_EMPLOY (
		<include refid="Base_Column_List" />
    )
	values (
		<include refid="Insert_Base_values" />
    )
	</insert>
	
	
	<!--查找有无相同的数据-->
	<select id="queryRepeatSalesmanEmploy" parameterType="com.sinosafe.xszc.group.vo.SalesmanEmploy" resultType="long">
		select count(1) from SALESMAN_EMPLOY se where se.pk_id=#{pkId,jdbcType=VARCHAR} 
	</select>
	
	<!--修改已经有的数据-->
	<update id="updateSalesmanEmploy" parameterType="com.sinosafe.xszc.group.vo.SalesmanEmploy">
		update SALESMAN_EMPLOY se set se.associate_code=#{associateCode,jdbcType=VARCHAR}
		where se.pk_id=#{pkId,jdbcType=VARCHAR} 
	</update>
	
	<!-- 
		insert操作给定的参数是java.util.Map<String,Object>类型的对象，
		与<sql id="Insert_Base_values">中配置的列一致
	-->
	<insert id="insert" parameterType="map" >
    insert into SALESMAN_EMPLOY (
		<include refid="Base_Column_List" />
    )
	values (
		<include refid="Insert_Base_values" />
    )
	</insert>

	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from SALESMAN_EMPLOY
    where PK_ID = #{pkId,jdbcType=VARCHAR}
	</delete>
<!-- 
	<delete id="deleteByDataKey" parameterType="long">
    delete from SALESMAN_EMPLOY
    where PK_SERIAL = #{data}
	</delete>
 -->
	<update id="updateByPrimaryKeySelective" parameterType="map" >
	update SALESMAN_EMPLOY
	<set>
	<if test="updatedUser != null and updatedUser != ''">
		UPDATED_USER = #{updatedUser,jdbcType=VARCHAR},
	</if>
  	<if test="validInd != null and validInd != ''">
		VALID_IND = #{validInd,jdbcType=CHAR},
	</if>
  	<if test="createdDate != null and createdDate != ''">
		CREATED_DATE = #{createdDate,jdbcType=DATE},
	</if>
  	<if test="associateCode != null and associateCode != ''">
		ASSOCIATE_CODE = #{associateCode,jdbcType=VARCHAR},
	</if>
   	<if test="salesmanCode != null and salesmanCode != ''">
		SALESMAN_CODE = #{salesmanCode,jdbcType=VARCHAR},
	</if>
  	<if test="createdUser != null and createdUser != ''">
		CREATED_USER = #{createdUser,jdbcType=VARCHAR},
	</if>
  	<if test="updatedDate != null and updatedDate != ''">
		UPDATED_DATE = #{updatedDate,jdbcType=DATE},
	</if>
  	<if test="employCode != null and employCode != ''">
		EMPLOY_CODE = #{employCode,jdbcType=VARCHAR},
	</if>
  	<if test="certifyNo != null and certifyNo != ''">
		CERTIFY_NO = #{certifyNo,jdbcType=VARCHAR},
	</if>
  	<if test="salesmanCname != null and salesmanCname != ''">
		SALESMAN_CNAME = #{salesmanCname,jdbcType=VARCHAR}
	</if>
  	</set>
	where PK_ID = #{pkId,jdbcType=VARCHAR}
	</update>
	
	<update id="updateByPrimaryKey" parameterType="map" >
		update SALESMAN_EMPLOY
		set 
			UPDATED_USER = #{updatedUser,jdbcType=VARCHAR},
  			VALID_IND = #{validInd,jdbcType=CHAR},
  			CREATED_DATE = #{createdDate,jdbcType=DATE},
  			ASSOCIATE_CODE = #{associateCode,jdbcType=VARCHAR},
   			SALESMAN_CODE = #{salesmanCode,jdbcType=VARCHAR},
  			CREATED_USER = #{createdUser,jdbcType=VARCHAR},
  			UPDATED_DATE = #{updatedDate,jdbcType=DATE},
  			EMPLOY_CODE = #{employCode,jdbcType=VARCHAR},
  			CERTIFY_NO = #{certifyNo,jdbcType=VARCHAR},
  			SALESMAN_CNAME = #{salesmanCname,jdbcType=VARCHAR}
  		where PK_ID = #{pkId,jdbcType=VARCHAR}
	</update>

	<update id="updateByPrimaryKeySelectiveVo" parameterType="com.sinosafe.xszc.group.vo.SalesmanEmploy" >
	update SALESMAN_EMPLOY
	<set>
	<if test="updatedUser != null and updatedUser != ''">
		UPDATED_USER = #{updatedUser,jdbcType=VARCHAR},
	</if>
  	<if test="validInd != null and validInd != ''">
		VALID_IND = #{validInd,jdbcType=CHAR},
	</if>
  	<if test="createdDate != null and createdDate != ''">
		CREATED_DATE = #{createdDate,jdbcType=DATE},
	</if>
  	<if test="associateCode != null and associateCode != ''">
		ASSOCIATE_CODE = #{associateCode,jdbcType=VARCHAR},
	</if>
   	<if test="salesmanCode != null and salesmanCode != ''">
		SALESMAN_CODE = #{salesmanCode,jdbcType=VARCHAR},
	</if>
  	<if test="createdUser != null and createdUser != ''">
		CREATED_USER = #{createdUser,jdbcType=VARCHAR},
	</if>
  	<if test="updatedDate != null and updatedDate != ''">
		UPDATED_DATE = #{updatedDate,jdbcType=DATE},
	</if>
  	<if test="employCode != null and employCode != ''">
		EMPLOY_CODE = #{employCode,jdbcType=VARCHAR},
	</if>
  	<if test="certifyNo != null and certifyNo != ''">
		CERTIFY_NO = #{certifyNo,jdbcType=VARCHAR},
	</if>
  	<if test="salesmanCname != null and salesmanCname != ''">
		SALESMAN_CNAME = #{salesmanCname,jdbcType=VARCHAR}
	</if>
  	</set>
	where PK_ID = #{pkId,jdbcType=VARCHAR}
	</update>
	
	<update id="updateByPrimaryKeyVo" parameterType="com.sinosafe.xszc.group.vo.SalesmanEmploy" >
		update SALESMAN_EMPLOY
		set 
			UPDATED_USER = #{updatedUser,jdbcType=VARCHAR},
  			VALID_IND = #{validInd,jdbcType=CHAR},
  			CREATED_DATE = #{createdDate,jdbcType=DATE},
  			ASSOCIATE_CODE = #{associateCode,jdbcType=VARCHAR},
   			SALESMAN_CODE = #{salesmanCode,jdbcType=VARCHAR},
  			CREATED_USER = #{createdUser,jdbcType=VARCHAR},
  			UPDATED_DATE = #{updatedDate,jdbcType=DATE},
  			EMPLOY_CODE = #{employCode,jdbcType=VARCHAR},
  			CERTIFY_NO = #{certifyNo,jdbcType=VARCHAR},
  			SALESMAN_CNAME = #{salesmanCname,jdbcType=VARCHAR}
  		where PK_ID = #{pkId,jdbcType=VARCHAR}
	</update>

	<!-- 根据Id查询一条数据 -->
	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select <include refid="Base_Column_List" />
	from SALESMAN_EMPLOY
	where PK_ID = #{pkId,jdbcType=VARCHAR}
	</select>
	<!-- 根据Id查询一条数据 -->
	<select id="selectByPrimaryKeyVo" resultMap="BaseResultVo" parameterType="java.lang.String" >
    select <include refid="Base_Column_List" />
	from SALESMAN_EMPLOY
	where PK_ID = #{pkId,jdbcType=VARCHAR}
	</select>

	<!-- 条件查询总数据量 -->
	<select id="queryCount" parameterType="map" resultType="long">
	select count(1)
	from SALESMAN_EMPLOY <include refid="Base_Where_Sql" />
	</select>
	
	<!-- 条件查询总数据量 -->
	<select id="queryCountVo" parameterType="com.sinosafe.xszc.group.vo.SalesmanEmploy" resultType="long">
	select count(1)
	from SALESMAN_EMPLOY <include refid="Base_Where_Sql" />
	</select>

	<!-- 单独条件分页查询语句,注意下面语句中的endpoint和startpoint这两个名称不可修改，否则将导致sql错误 -->
	<select id="queryListPage" parameterType="map" resultMap="BaseResultMap">
	select * from (
		select a.*,rownum rn from (
		select 
		<include refid="Base_Column_List"/>
		from SALESMAN_EMPLOY
		<include refid="Base_Where_Sql"/>
		order by CREATED_DATE desc
		) a where rownum &lt;= #{endpoint}
	) where rn &gt;= #{startpoint}
	</select>
	
	<!-- 单独条件分页查询语句,注意下面语句中的endpoint和startpoint这两个名称不可修改，否则将导致sql错误 -->
	<select id="querySalesmanEmployHistory" parameterType="map" resultMap="BaseResultMap">
	select * from (
		select a.*,rownum rn from (
		select 
		<include refid="Base_Column_List"/>
		from SALESMAN_EMPLOY
		where
		updated_Date &lt;=to_date(#{updatedDate2,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')
		and salesman_code=#{salesmanCode,jdbcType=VARCHAR}
		order by CREATED_DATE desc
		) a where rownum &lt;= #{endpoint}
	) where rn &gt;= #{startpoint}
	</select>
	
	<!-- 单独条件分页查询语句,注意下面语句中的endpoint和startpoint这两个名称不可修改，否则将导致sql错误 -->
	<select id="queryListPageVo" parameterType="map" resultMap="BaseResultVo">
	select * from (
		select a.*,rownum rn from (
		select 
		<include refid="Base_Column_List"/>
		from SALESMAN_EMPLOY
		<include refid="Base_Where_Sql"/>
		) a where rownum &lt;= #{endpoint}
	) where rn &gt;= #{startpoint}
	</select>
	
	<!-- 条件查询 -->
	<select id="query" parameterType="map" resultMap="BaseResultMap">
		select 
		<include refid="Base_Column_List"/>
		from SALESMAN_EMPLOY
		<include refid="Base_Where_Sql"/>
	</select>
	
	<!-- 条件查询 -->
	<select id="queryVo" parameterType="map" resultMap="BaseResultVo">
		select 
		<include refid="Base_Column_List"/>
		from SALESMAN_EMPLOY
		<include refid="Base_Where_Sql"/>
	</select>
	
	<!-- 综合条件分页查询语句,注意下面语句中的endpoint和startpoint这两个名称不可修改，否则将导致sql错误 -->
	<select id="queryPage" parameterType="map" resultMap="BaseResultMap">
	<choose>
		<when test="endpoint!=null and endpoint != '' and startpoint != null and startpoint != ''">
		select * from (
			select a.*,rownum rn from (
				select 
				<include refid="Base_Column_List"/>
				from SALESMAN_EMPLOY
				<include refid="Base_Where_Sql"/>
			) a where rownum &lt;= #{endpoint}
		) where rn &gt;= #{startpoint}
		</when>
		<otherwise>
		<!-- 这里的"count"重命名不可修改，否则会出现异常 -->
		select count(1) "count" from SALESMAN_EMPLOY <include refid="Base_Where_Sql" />
		</otherwise>
	</choose>
	</select>
	
	
</mapper>
