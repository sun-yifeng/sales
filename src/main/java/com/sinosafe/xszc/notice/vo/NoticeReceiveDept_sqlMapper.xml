<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sinosafe.xszc.notice.vo.NoticeReceiveDept" >
	<resultMap id="BaseResultMap" type="java.util.HashMap">
		<id column="RECEIVER_ID" property="receiverId" javaType="java.lang.String" jdbcType="VARCHAR" />
		<result column="UPDATED_USER" property="updatedUser" jdbcType="VARCHAR" javaType="java.lang.String" />
 		<result column="VALID_IND" property="validInd" jdbcType="CHAR" javaType="java.lang.String" />
 		<result column="CREATED_DATE" property="createdDate" jdbcType="DATE" javaType="java.sql.Timestamp" />
  		<result column="CREATED_USER" property="createdUser" jdbcType="VARCHAR" javaType="java.lang.String" />
 		<result column="DEPT_CODE" property="deptCode" jdbcType="VARCHAR" javaType="java.lang.String" />
 		<result column="NOTIC_ID" property="noticId" jdbcType="VARCHAR" javaType="java.lang.String" />
 		<result column="UPDATED_DATE" property="updatedDate" jdbcType="DATE" javaType="java.sql.Timestamp" />
 		<result column="STATUS" property="status" jdbcType="CHAR" javaType="java.lang.String" />
 	</resultMap>
	
	<resultMap id="BaseResultVo" type="com.sinosafe.xszc.notice.vo.NoticeReceiveDept">
		<id column="RECEIVER_ID" property="receiverId" javaType="java.lang.String" jdbcType="VARCHAR" />
		<result column="UPDATED_USER" property="updatedUser" jdbcType="VARCHAR" javaType="java.lang.String" />
 		<result column="VALID_IND" property="validInd" jdbcType="CHAR" javaType="java.lang.String" />
 		<result column="CREATED_DATE" property="createdDate" jdbcType="DATE" javaType="java.sql.Timestamp" />
  		<result column="CREATED_USER" property="createdUser" jdbcType="VARCHAR" javaType="java.lang.String" />
 		<result column="DEPT_CODE" property="deptCode" jdbcType="VARCHAR" javaType="java.lang.String" />
 		<result column="NOTIC_ID" property="noticId" jdbcType="VARCHAR" javaType="java.lang.String" />
 		<result column="UPDATED_DATE" property="updatedDate" jdbcType="DATE" javaType="java.sql.Timestamp" />
 		<result column="STATUS" property="status" jdbcType="CHAR" javaType="java.lang.String" />
 	</resultMap>

	<!-- 查询数据列Sql不转换成对应的Java命名 -->
	<sql id="Base_Column_List" >
		UPDATED_USER,
		VALID_IND,
		CREATED_DATE,
		RECEIVER_ID,
		CREATED_USER,
		DEPT_CODE,
		NOTIC_ID,
		UPDATED_DATE,
		STATUS,
		ROLE_CODE
	</sql>
	
	<!-- 查询数据列Sql换成对应的Java命名 -->
	<sql id="Base_Column_List_JavaName" >
		UPDATED_USER as "updatedUser",
		VALID_IND as "validInd",
		CREATED_DATE as "createdDate",
		RECEIVER_ID as "receiverId",
		CREATED_USER as "createdUser",
		DEPT_CODE as "deptCode",
		NOTIC_ID as "noticId",
		UPDATED_DATE as "updatedDate",
		STATUS as "status"
	</sql>
	
	<!-- 写入操作的SQL -->
	<sql id="Insert_Base_values">
		#{updatedUser,jdbcType=VARCHAR},
 		#{validInd,jdbcType=CHAR},
 		#{createdDate,jdbcType=DATE},
 		#{receiverId,jdbcType=VARCHAR},
 		#{createdUser,jdbcType=VARCHAR},
 		#{deptCode,jdbcType=VARCHAR},
 		#{noticId,jdbcType=VARCHAR},
 		#{updatedDate,jdbcType=DATE},
 		#{status,jdbcType=CHAR}
 	</sql>
	
	<!-- 查询条件的sql -->
	<sql id="Base_Where_Sql">
		<where>
		<if test="updatedUser != null and updatedUser != ''">
			and UPDATED_USER = #{updatedUser,jdbcType=VARCHAR}
		</if>
		<if test="validInd != null and validInd != ''">
			and VALID_IND = #{validInd,jdbcType=CHAR}
		</if>
		<if test="createdDate != null and createdDate != ''">
			and CREATED_DATE = #{createdDate,jdbcType=DATE}
		</if>
		<if test="receiverId != null and receiverId != ''">
			and RECEIVER_ID = #{receiverId,jdbcType=VARCHAR}
		</if>
		<if test="createdUser != null and createdUser != ''">
			and CREATED_USER = #{createdUser,jdbcType=VARCHAR}
		</if>
		<if test="deptCode != null and deptCode != ''">
			and DEPT_CODE = #{deptCode,jdbcType=VARCHAR}
		</if>
		<if test="noticId != null and noticId != ''">
			and NOTIC_ID = #{noticId,jdbcType=VARCHAR}
		</if>
		<if test="updatedDate != null and updatedDate != ''">
			and UPDATED_DATE = #{updatedDate,jdbcType=DATE}
		</if>
		<if test="status != null and status != ''">
			and STATUS = #{status,jdbcType=CHAR}
		</if>
		</where>
	</sql>
	
	<!-- 
		insert操作给定的参数是java.util.Map<String,Object>类型的对象，
		与<sql id="Insert_Base_values">中配置的列一致
	-->
	<insert id="insertVo" parameterType="com.sinosafe.xszc.notice.vo.NoticeReceiveDept" >
    insert into NOTICE_RECEIVE_DEPT (
		<include refid="Base_Column_List" />
    )
	values (
		<include refid="Insert_Base_values" />
    )
	</insert>
	
	<!-- 
		insert操作给定的参数是java.util.Map<String,Object>类型的对象，
		与<sql id="Insert_Base_values">中配置的列一致
	-->
	<insert id="insert" parameterType="map" >
    insert into NOTICE_RECEIVE_DEPT (
		<include refid="Base_Column_List" />
    )
	values (
		<include refid="Insert_Base_values" />
    )
	</insert>

	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from NOTICE_RECEIVE_DEPT
    where RECEIVER_ID = #{receiverId,jdbcType=VARCHAR}
	</delete>
<!-- 
	<delete id="deleteByDataKey" parameterType="long">
    delete from NOTICE_RECEIVE_DEPT
    where PK_SERIAL = #{data}
	</delete>
 -->
	<update id="updateByPrimaryKeySelective" parameterType="map" >
	update NOTICE_RECEIVE_DEPT
	<set>
	<if test="updatedUser != null and updatedUser != ''">
		UPDATED_USER = #{updatedUser,jdbcType=VARCHAR},
	</if>
  	<if test="validInd != null and validInd != ''">
		VALID_IND = #{validInd,jdbcType=CHAR},
	</if>
  	<if test="createdDate != null and createdDate != ''">
		CREATED_DATE = #{createdDate,jdbcType=DATE},
	</if>
   	<if test="createdUser != null and createdUser != ''">
		CREATED_USER = #{createdUser,jdbcType=VARCHAR},
	</if>
  	<if test="deptCode != null and deptCode != ''">
		DEPT_CODE = #{deptCode,jdbcType=VARCHAR},
	</if>
  	<if test="noticId != null and noticId != ''">
		NOTIC_ID = #{noticId,jdbcType=VARCHAR},
	</if>
  	<if test="updatedDate != null and updatedDate != ''">
		UPDATED_DATE = #{updatedDate,jdbcType=DATE},
	</if>
  	<if test="status != null and status != ''">
		STATUS = #{status,jdbcType=CHAR}
	</if>
  	</set>
	where RECEIVER_ID = #{receiverId,jdbcType=VARCHAR}
	</update>
	
	<update id="updateByPrimaryKey" parameterType="map" >
		update NOTICE_RECEIVE_DEPT
		set 
			UPDATED_USER = #{updatedUser,jdbcType=VARCHAR},
  			VALID_IND = #{validInd,jdbcType=CHAR},
  			CREATED_DATE = #{createdDate,jdbcType=DATE},
   			CREATED_USER = #{createdUser,jdbcType=VARCHAR},
  			DEPT_CODE = #{deptCode,jdbcType=VARCHAR},
  			NOTIC_ID = #{noticId,jdbcType=VARCHAR},
  			UPDATED_DATE = #{updatedDate,jdbcType=DATE},
  			STATUS = #{status,jdbcType=CHAR}
  		where RECEIVER_ID = #{receiverId,jdbcType=VARCHAR}
	</update>

	<update id="updateByPrimaryKeySelectiveVo" parameterType="com.sinosafe.xszc.notice.vo.NoticeReceiveDept" >
	update NOTICE_RECEIVE_DEPT
	<set>
	<if test="updatedUser != null and updatedUser != ''">
		UPDATED_USER = #{updatedUser,jdbcType=VARCHAR},
	</if>
  	<if test="validInd != null and validInd != ''">
		VALID_IND = #{validInd,jdbcType=CHAR},
	</if>
  	<if test="createdDate != null and createdDate != ''">
		CREATED_DATE = #{createdDate,jdbcType=DATE},
	</if>
   	<if test="createdUser != null and createdUser != ''">
		CREATED_USER = #{createdUser,jdbcType=VARCHAR},
	</if>
  	<if test="deptCode != null and deptCode != ''">
		DEPT_CODE = #{deptCode,jdbcType=VARCHAR},
	</if>
  	<if test="noticId != null and noticId != ''">
		NOTIC_ID = #{noticId,jdbcType=VARCHAR},
	</if>
  	<if test="updatedDate != null and updatedDate != ''">
		UPDATED_DATE = #{updatedDate,jdbcType=DATE},
	</if>
  	<if test="status != null and status != ''">
		STATUS = #{status,jdbcType=CHAR}
	</if>
  	</set>
	where RECEIVER_ID = #{receiverId,jdbcType=VARCHAR}
	</update>
	
	<update id="updateByPrimaryKeyVo" parameterType="com.sinosafe.xszc.notice.vo.NoticeReceiveDept" >
		update NOTICE_RECEIVE_DEPT
		set 
			UPDATED_USER = #{updatedUser,jdbcType=VARCHAR},
  			VALID_IND = #{validInd,jdbcType=CHAR},
  			CREATED_DATE = #{createdDate,jdbcType=DATE},
   			CREATED_USER = #{createdUser,jdbcType=VARCHAR},
  			DEPT_CODE = #{deptCode,jdbcType=VARCHAR},
  			NOTIC_ID = #{noticId,jdbcType=VARCHAR},
  			UPDATED_DATE = #{updatedDate,jdbcType=DATE},
  			STATUS = #{status,jdbcType=CHAR}
  		where RECEIVER_ID = #{receiverId,jdbcType=VARCHAR}
	</update>

	<!-- 根据Id查询一条数据 -->
	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select <include refid="Base_Column_List" />
	from NOTICE_RECEIVE_DEPT
	where RECEIVER_ID = #{receiverId,jdbcType=VARCHAR}
	</select>
	<!-- 根据Id查询一条数据 -->
	<select id="selectByPrimaryKeyVo" resultMap="BaseResultVo" parameterType="java.lang.String" >
    select <include refid="Base_Column_List" />
	from NOTICE_RECEIVE_DEPT
	where RECEIVER_ID = #{receiverId,jdbcType=VARCHAR}
	</select>

	<!-- 条件查询总数据量 -->
	<select id="queryCount" parameterType="map" resultType="long">
	select count(1)
	from NOTICE_RECEIVE_DEPT <include refid="Base_Where_Sql" />
	</select>
	
	<!-- 条件查询总数据量 -->
	<select id="queryCountVo" parameterType="com.sinosafe.xszc.notice.vo.NoticeReceiveDept" resultType="long">
	select count(1)
	from NOTICE_RECEIVE_DEPT <include refid="Base_Where_Sql" />
	</select>

	<!-- 单独条件分页查询语句,注意下面语句中的endpoint和startpoint这两个名称不可修改，否则将导致sql错误 -->
	<select id="queryListPage" parameterType="map" resultMap="BaseResultMap">
	select * from (
		select a.*,rownum rn from (
		select 
		<include refid="Base_Column_List"/>
		from NOTICE_RECEIVE_DEPT
		<include refid="Base_Where_Sql"/>
		) a where rownum &lt;= #{endpoint}
	) where rn &gt;= #{startpoint}
	</select>
	
	<!-- 单独条件分页查询语句,注意下面语句中的endpoint和startpoint这两个名称不可修改，否则将导致sql错误 -->
	<select id="queryListPageVo" parameterType="map" resultMap="BaseResultVo">
	select * from (
		select a.*,rownum rn from (
		select 
		<include refid="Base_Column_List"/>
		from NOTICE_RECEIVE_DEPT
		<include refid="Base_Where_Sql"/>
		) a where rownum &lt;= #{endpoint}
	) where rn &gt;= #{startpoint}
	</select>
	
	<!-- 选择接收部门查询 -->
	<select id="queryAllReceiveDept" parameterType="map" resultMap="BaseResultMap">
		select 
		<include refid="Base_Column_List"/>
		from NOTICE_RECEIVE_DEPT
		<include refid="Base_Where_Sql"/>
	</select>
	
	
	<!-- 条件查询 -->
	<select id="query" parameterType="map" resultMap="BaseResultMap">
		select 
		<include refid="Base_Column_List"/>
		from NOTICE_RECEIVE_DEPT
		<include refid="Base_Where_Sql"/>
	</select>
	
	<!-- 条件查询 -->
	<select id="queryVo" parameterType="map" resultMap="BaseResultVo">
		select 
		<include refid="Base_Column_List"/>
		from NOTICE_RECEIVE_DEPT
		<include refid="Base_Where_Sql"/>
	</select>
	
	<!-- 综合条件分页查询语句,注意下面语句中的endpoint和startpoint这两个名称不可修改，否则将导致sql错误 -->
	<select id="queryPage" parameterType="map" resultMap="BaseResultMap">
		<choose>
			<when test="endpoint!=null and endpoint != '' and startpoint != null and startpoint != ''">
			select * from (
				select a.*,rownum rn from (
					select 
					<include refid="Base_Column_List"/>
					from NOTICE_RECEIVE_DEPT
					<include refid="Base_Where_Sql"/>
				) a where rownum &lt;= #{endpoint}
			) where rn &gt;= #{startpoint}
			</when>
			<otherwise>
			<!-- 这里的"count"重命名不可修改，否则会出现异常 -->
			select count(1) "count" from NOTICE_RECEIVE_DEPT <include refid="Base_Where_Sql" />
			</otherwise>
		</choose>
	</select>
	
	<!-- 自定义SQL，通过父机构查询子机构   -->
	<select id="queryDeptByParentCode" parameterType="map" resultMap="BaseResultMap">
	    select t.dept_code as "value",
		       t.dept_simple_name as "text",
		       t.dept_code as "departCode"
		    from department t
		    where 1=1
	        and t.valid_ind = '1'
	        <if test=" parentCode != null and parentCode !='' ">
	           and t.parent_dept_code = #{parentCode}
	        </if>
			order by t.dept_code asc
	</select> 
	
	<!-- 自定义SQL，通过发送层级和角色代码查询具有发送公告权限的角色  -->
	<select id="queryRoleByRelationTypeAndRole" parameterType="map" resultMap="BaseResultMap">
	    select distinct t. recieve_user_role as "value",
        t.recieve_user_name as "text"
        from notice_role t 
        where 1=1
        and t.valid_ind='1' 
        and t.relation_type= #{relationType}
        and t.send_user_role in (
        <foreach item="item" index="index" collection="sendUserRole" separator=",">
				#{item}
		</foreach>
        )
	</select> 
	
	<insert id="insertData" parameterType="map" >
    insert into NOTICE_RECEIVE_DEPT ( <include refid="Base_Column_List" /> )
		select UPDATED_USER,
			VALID_IND,
			sysdate,
			sys_guid(),
			CREATED_USER,
			DEPT_CODE,
			#{noticId,jdbcType=VARCHAR},
			sysdate,
			'1'
			from NOTICE_RECEIVE_DEPT n
		where n.NOTIC_ID = #{oldNoticId,jdbcType=VARCHAR}
		and n.valid_ind = '1'
	</insert>
	
	<update id="deleteByNoticId" parameterType="map" >
		update NOTICE_RECEIVE_DEPT
		set VALID_IND = 0,
		UPDATED_DATE = sysdate,
		UPDATED_USER = #{updatedUser,jdbcType=VARCHAR}
		where NOTIC_ID = #{noticId,jdbcType=VARCHAR}
	</update>
</mapper>
