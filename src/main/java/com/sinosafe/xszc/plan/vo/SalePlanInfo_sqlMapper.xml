<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sinosafe.xszc.plan.vo.SalePlanInfo" >
	<resultMap id="BaseResultMap" type="java.util.HashMap">
		<id column="SALE_PLAN_ID" property="salePlanId" javaType="java.lang.String" jdbcType="VARCHAR" />
		<result column="UPDATED_USER" property="updatedUser" jdbcType="VARCHAR" javaType="java.lang.String" />
 		<result column="CREATED_DATE" property="createdDate" jdbcType="DATE" javaType="java.sql.Timestamp" />
 		<result column="DEPT_PREMIUM" property="deptPremium" jdbcType="DOUBLE" javaType="java.lang.Double" />
 		<result column="QUARTER" property="quarter" jdbcType="CHAR" javaType="java.lang.String" />
 		<result column="CREATED_USER" property="createdUser" jdbcType="VARCHAR" javaType="java.lang.String" />
 		<result column="YEAR" property="year" jdbcType="INTEGER" javaType="java.lang.Integer" />
 		<result column="DEPT_CODE" property="deptCode" jdbcType="VARCHAR" javaType="java.lang.String" />
 		<result column="PLAN_TYPE" property="planType" jdbcType="CHAR" javaType="java.lang.String" />
 		<result column="UPDATED_DATE" property="updatedDate" jdbcType="DATE" javaType="java.sql.Timestamp" />
  	</resultMap>
	
	<resultMap id="BaseResultVo" type="com.sinosafe.xszc.plan.vo.SalePlanInfo">
		<id column="SALE_PLAN_ID" property="salePlanId" javaType="java.lang.String" jdbcType="VARCHAR" />
		<result column="UPDATED_USER" property="updatedUser" jdbcType="VARCHAR" javaType="java.lang.String" />
 		<result column="CREATED_DATE" property="createdDate" jdbcType="DATE" javaType="java.sql.Timestamp" />
 		<result column="DEPT_PREMIUM" property="deptPremium" jdbcType="DOUBLE" javaType="java.lang.Double" />
 		<result column="QUARTER" property="quarter" jdbcType="CHAR" javaType="java.lang.String" />
 		<result column="CREATED_USER" property="createdUser" jdbcType="VARCHAR" javaType="java.lang.String" />
 		<result column="YEAR" property="year" jdbcType="INTEGER" javaType="java.lang.Integer" />
 		<result column="DEPT_CODE" property="deptCode" jdbcType="VARCHAR" javaType="java.lang.String" />
 		<result column="PLAN_TYPE" property="planType" jdbcType="CHAR" javaType="java.lang.String" />
 		<result column="UPDATED_DATE" property="updatedDate" jdbcType="DATE" javaType="java.sql.Timestamp" />
  	</resultMap>

	<!-- 查询数据列Sql不转换成对应的Java命名 -->
	<sql id="Base_Column_List" >
		UPDATED_USER,
		CREATED_DATE,
		DEPT_PREMIUM,
		QUARTER,
		CREATED_USER,
		"YEAR",
		DEPT_CODE,
		PLAN_TYPE,
		UPDATED_DATE,
		SALE_PLAN_ID
	</sql>
	
	<!-- 查询数据列Sql换成对应的Java命名 -->
	<sql id="Base_Column_List_JavaName" >
		UPDATED_USER as "updatedUser",
		to_char(CREATED_DATE,'yyyy-mm-dd') as "createdDate",
		DEPT_PREMIUM as "deptPremium",
		QUARTER as "quarter",
		CREATED_USER as "createdUser",
		YEAR as "year",
		DEPT_CODE as "deptCode",
		PLAN_TYPE as "planType",
		UPDATED_DATE as "updatedDate",
		SALE_PLAN_ID as "salePlanId"
	</sql>
	
	<!-- 写入操作的SQL -->
	<sql id="Insert_Base_values">
		#{updatedUser,jdbcType=VARCHAR},
		SYSDATE,
 		#{deptPremium,jdbcType=DOUBLE},
 		#{quarter,jdbcType=CHAR},
 		#{createdUser,jdbcType=VARCHAR},
 		#{year,jdbcType=INTEGER},
 		#{deptCode,jdbcType=VARCHAR},
 		#{planType,jdbcType=CHAR},
 		#{updatedDate,jdbcType=DATE},
 		#{salePlanId,jdbcType=VARCHAR}
 	</sql>
	
	<!-- 查询条件的sql -->
	<sql id="Base_Where_Sql">
		<where>
		<if test="updatedUser != null">
			and UPDATED_USER = #{updatedUser,jdbcType=VARCHAR}
		</if>
		<if test="createdDate != null">
			and CREATED_DATE = #{createdDate,jdbcType=DATE}
		</if>
		<if test="deptPremium != null">
			and DEPT_PREMIUM = #{deptPremium,jdbcType=DOUBLE}
		</if>
		<if test="quarter != null">
			and QUARTER = #{quarter,jdbcType=CHAR}
		</if>
		<if test="createdUser != null">
			and CREATED_USER = #{createdUser,jdbcType=VARCHAR}
		</if>
		<if test="year != null">
			and YEAR = #{year,jdbcType=INTEGER}
		</if>
		<if test="deptCode != null and deptCode!=''">
			and DEPT_CODE = #{deptCode,jdbcType=VARCHAR}
		</if>
		<if test="planType != null">
			and PLAN_TYPE = #{planType,jdbcType=CHAR}
		</if>
		<if test="updatedDate != null">
			and UPDATED_DATE = #{updatedDate,jdbcType=DATE}
		</if>
		<if test="salePlanId != null">
			and SALE_PLAN_ID = #{salePlanId,jdbcType=VARCHAR}
		</if>
		</where>
	</sql>
	
	<!-- 
		insert操作给定的参数是java.util.Map<String,Object>类型的对象，
		与<sql id="Insert_Base_values">中配置的列一致
	-->
	<insert id="insertVo" parameterType="com.sinosafe.xszc.plan.vo.SalePlanInfo" >
    insert into SALE_PLAN_INFO (
		<include refid="Base_Column_List" />
    )
	values (
		<include refid="Insert_Base_values" />
    )
	</insert>
	
	<!-- 
		insert操作给定的参数是java.util.Map<String,Object>类型的对象，
		与<sql id="Insert_Base_values">中配置的列一致
	-->
	<insert id="insert" parameterType="map" >
    insert into SALE_PLAN_INFO (
		<include refid="Base_Column_List" />
    )
	values (
		<include refid="Insert_Base_values" />
    )
	</insert>

	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from SALE_PLAN_INFO
    where SALE_PLAN_ID = #{salePlanId,jdbcType=VARCHAR}
	</delete>
<!-- 
	<delete id="deleteByDataKey" parameterType="long">
    delete from SALE_PLAN_INFO
    where PK_SERIAL = #{data}
	</delete>
 -->
	<update id="updateByPrimaryKeySelective" parameterType="map" >
	update SALE_PLAN_INFO
	<set>
	<if test="updatedUser != null">
		UPDATED_USER = #{updatedUser,jdbcType=VARCHAR},
	</if>
  	<if test="createdDate != null">
		CREATED_DATE = #{createdDate,jdbcType=DATE},
	</if>
  	<if test="deptPremium != null">
		DEPT_PREMIUM = #{deptPremium,jdbcType=DOUBLE},
	</if>
  	<if test="quarter != null">
		QUARTER = #{quarter,jdbcType=CHAR},
	</if>
  	<if test="createdUser != null">
		CREATED_USER = #{createdUser,jdbcType=VARCHAR},
	</if>
  	<if test="year != null">
		YEAR = #{year,jdbcType=INTEGER},
	</if>
  	<if test="deptCode != null">
		DEPT_CODE = #{deptCode,jdbcType=VARCHAR},
	</if>
  	<if test="planType != null">
		PLAN_TYPE = #{planType,jdbcType=CHAR},
	</if>
  	<if test="updatedDate != null">
		UPDATED_DATE = #{updatedDate,jdbcType=DATE},
	</if>
   	</set>
	where SALE_PLAN_ID = #{salePlanId,jdbcType=VARCHAR}
	</update>
	
	<update id="updateByPrimaryKey" parameterType="map" >
		update SALE_PLAN_INFO
		set 
			UPDATED_USER = #{updatedUser,jdbcType=VARCHAR},
  			CREATED_DATE = #{createdDate,jdbcType=DATE},
  			DEPT_PREMIUM = #{deptPremium,jdbcType=DOUBLE},
  			QUARTER = #{quarter,jdbcType=CHAR},
  			CREATED_USER = #{createdUser,jdbcType=VARCHAR},
  			YEAR = #{year,jdbcType=INTEGER},
  			DEPT_CODE = #{deptCode,jdbcType=VARCHAR},
  			PLAN_TYPE = #{planType,jdbcType=CHAR},
  			UPDATED_DATE = #{updatedDate,jdbcType=DATE},
   		where SALE_PLAN_ID = #{salePlanId,jdbcType=VARCHAR}
	</update>

	<update id="updateByPrimaryKeySelectiveVo" parameterType="com.sinosafe.xszc.plan.vo.SalePlanInfo" >
	update SALE_PLAN_INFO
	<set>
	<if test="updatedUser != null">
		UPDATED_USER = #{updatedUser,jdbcType=VARCHAR},
	</if>
  	<if test="createdDate != null">
		CREATED_DATE = #{createdDate,jdbcType=DATE},
	</if>
  	<if test="deptPremium != null">
		DEPT_PREMIUM = #{deptPremium,jdbcType=DOUBLE},
	</if>
  	<if test="quarter != null">
		QUARTER = #{quarter,jdbcType=CHAR},
	</if>
  	<if test="createdUser != null">
		CREATED_USER = #{createdUser,jdbcType=VARCHAR},
	</if>
  	<if test="year != null">
		YEAR = #{year,jdbcType=INTEGER},
	</if>
  	<if test="deptCode != null">
		DEPT_CODE = #{deptCode,jdbcType=VARCHAR},
	</if>
  	<if test="planType != null">
		PLAN_TYPE = #{planType,jdbcType=CHAR},
	</if>
  	<if test="updatedDate != null">
		UPDATED_DATE = #{updatedDate,jdbcType=DATE},
	</if>
   	</set>
	where SALE_PLAN_ID = #{salePlanId,jdbcType=VARCHAR}
	</update>
	
	<update id="updateByPrimaryKeyVo" parameterType="com.sinosafe.xszc.plan.vo.SalePlanInfo" >
		update SALE_PLAN_INFO
		set 
			UPDATED_USER = #{updatedUser,jdbcType=VARCHAR},
  			CREATED_DATE = #{createdDate,jdbcType=DATE},
  			DEPT_PREMIUM = #{deptPremium,jdbcType=DOUBLE},
  			QUARTER = #{quarter,jdbcType=CHAR},
  			CREATED_USER = #{createdUser,jdbcType=VARCHAR},
  			YEAR = #{year,jdbcType=INTEGER},
  			DEPT_CODE = #{deptCode,jdbcType=VARCHAR},
  			PLAN_TYPE = #{planType,jdbcType=CHAR},
  			UPDATED_DATE = #{updatedDate,jdbcType=DATE},
   		where SALE_PLAN_ID = #{salePlanId,jdbcType=VARCHAR}
	</update>

	<!-- 根据Id查询一条数据 -->
	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select <include refid="Base_Column_List" />
	from SALE_PLAN_INFO
	where SALE_PLAN_ID = #{salePlanId,jdbcType=VARCHAR}
	</select>
	<!-- 根据Id查询一条数据 -->
	<select id="selectByPrimaryKeyVo" resultMap="BaseResultVo" parameterType="java.lang.String" >
    select <include refid="Base_Column_List" />
	from SALE_PLAN_INFO
	where SALE_PLAN_ID = #{salePlanId,jdbcType=VARCHAR}
	</select>

	<!-- 条件查询总数据量 -->
	<select id="queryCount" parameterType="map" resultType="long">
	select count(1)
	from SALE_PLAN_INFO <include refid="Base_Where_Sql" />
	</select>
	
	<!-- 条件查询总数据量 -->
	<select id="queryCountVo" parameterType="com.sinosafe.xszc.plan.vo.SalePlanInfo" resultType="long">
	select count(1)
	from SALE_PLAN_INFO <include refid="Base_Where_Sql" />
	</select>

	<!-- 单独条件分页查询语句,注意下面语句中的endpoint和startpoint这两个名称不可修改，否则将导致sql错误 -->
  <select id="queryListPage" parameterType="map" resultMap="BaseResultMap">
 select pb.SALE_PLAN_ID,
                       pb.DEPT_CODE,
                       pb.YEAR,
                       pb.QUARTER,
                       pb.DEPT_PREMIUM,
                       fb.CHANNEL_CODE as "channelCode",
                       fb.TARGET_PREMIUM as "targetPremium"
                  from SALE_PLAN_INFO pb
                  left join (select *
                              from SALE_PLAN_CHANNEL t1
                             where not exists
                             (select 1
                                      from SALE_PLAN_CHANNEL t2
                                     where t1.CHANNEL_PLAN_ID =
                                           t2.CHANNEL_PLAN_ID
                                       and t1.created_date > t2.created_date)) fb
                    on pb.SALE_PLAN_ID = fb.SALE_PLAN_ID
					<include refid="Base_Where_Sql" />
	</select>
	<select id="queryListsPage" parameterType="map" resultMap="BaseResultMap">
		select <include refid="Base_Column_List" />
		from SALE_PLAN_INFO 
		<include refid="Base_Where_Sql"/>
	</select>
	
	
	<!-- 单独条件分页查询语句,注意下面语句中的endpoint和startpoint这两个名称不可修改，否则将导致sql错误 -->
	<select id="queryListPageVo" parameterType="map" resultMap="BaseResultVo">
	select * from (
		select a.*,rownum rn from (
		select 
		<include refid="Base_Column_List"/>
		from SALE_PLAN_INFO
		<include refid="Base_Where_Sql"/>
		) a where rownum &lt;= #{endpoint}
	) where rn &gt;= #{startpoint}
	</select>
	
	<!-- 条件查询 -->
	<select id="query" parameterType="map" resultMap="BaseResultMap">
		select 
		<include refid="Base_Column_List"/>
		from SALE_PLAN_INFO
		<include refid="Base_Where_Sql"/>
	</select>
	
	<!-- 条件查询 -->
	<select id="queryVo" parameterType="map" resultMap="BaseResultVo">
		select 
		<include refid="Base_Column_List"/>
		from SALE_PLAN_INFO
		<include refid="Base_Where_Sql"/>
	</select>
	
	<!-- 综合条件分页查询语句,注意下面语句中的endpoint和startpoint这两个名称不可修改，否则将导致sql错误 -->
	<select id="queryPage" parameterType="map" resultMap="BaseResultMap">
	<choose>
		<when test="endpoint!=null and endpoint != '' and startpoint != null and startpoint != ''">
		select * from (
			select a.*,rownum rn from (
				select 
				<include refid="Base_Column_List"/>
				from SALE_PLAN_INFO
				<include refid="Base_Where_Sql"/>
			) a where rownum &lt;= #{endpoint}
		) where rn &gt;= #{startpoint}
		</when>
		<otherwise>
		<!-- 这里的"count"重命名不可修改，否则会出现异常 -->
		select count(1) "count" from SALE_PLAN_INFO <include refid="Base_Where_Sql" />
		</otherwise>
	</choose>
	
	select * from (
		select a.*,rownum rn from (
		select 
		<include refid="Base_Column_List"/>
		from SALE_PLAN_INFO
		<include refid="Base_Where_Sql"/>
		) a where rownum &lt;= #{endpoint}
	) where rn &gt;= #{startpoint}
	</select>
	
	<!-- 综合条件分页查询语句,注意下面语句中的endpoint和startpoint这两个名称不可修改，否则将导致sql错误 -->
	<select id="queryPageVo" parameterType="map" resultMap="BaseResultVo">
	<choose>
		<when test="endpoint!=null and endpoint != '' and startpoint != null and startpoint != ''">
		select * from (
			select a.*,rownum rn from (
				select 
				<include refid="Base_Column_List"/>
				from SALE_PLAN_INFO
				<include refid="Base_Where_Sql"/>
			) a where rownum &lt;= #{endpoint}
		) where rn &gt;= #{startpoint}
		</when>
		<otherwise>
		<!-- 这里的"count"重命名不可修改，否则会出现异常 -->
		select count(1) "count" from SALE_PLAN_INFO <include refid="Base_Where_Sql" />
		</otherwise>
	</choose>
	
	select * from (
		select a.*,rownum rn from (
		select 
		<include refid="Base_Column_List"/>
		from SALE_PLAN_INFO
		<include refid="Base_Where_Sql"/>
		) a where rownum &lt;= #{endpoint}
	) where rn &gt;= #{startpoint}
	</select>
	
	<!-- 两表联合查询 -->
	<select id="queryJoinTable" parameterType="map" resultMap="BaseResultMap">
	  select t2.c_dpt_cde,t2.c_dpt_abr from sale_plan_info t1,sale_department t2
 where t1.dept_code=t2.c_dpt_cde
	</select>
	
</mapper>
