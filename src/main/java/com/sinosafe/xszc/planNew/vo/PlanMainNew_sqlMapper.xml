<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sinosafe.xszc.planNew.vo.PlanMainNew" >
	<resultMap id="BaseResultMap" type="java.util.HashMap">
		<id column="PLAN_MAIN_ID" property="planMainId" javaType="java.lang.String" jdbcType="VARCHAR" />
		<result column="UPDATED_USER" property="updatedUser" jdbcType="VARCHAR" javaType="java.lang.String" />
 		<result column="QUARTER" property="quarter" jdbcType="CHAR" javaType="java.lang.String" />
 		<result column="PLAN_WRITE_DATE" property="planWriteDate" jdbcType="DATE" javaType="java.sql.Timestamp" />
 		<result column="CREATED_USER" property="createdUser" jdbcType="VARCHAR" javaType="java.lang.String" />
 		<result column="YEAR" property="year" jdbcType="INTEGER" javaType="java.lang.Integer" />
 		<result column="DEPT_CODE" property="deptCode" jdbcType="VARCHAR" javaType="java.lang.String" />
 		<result column="PLAN_TYPE" property="planType" jdbcType="CHAR" javaType="java.lang.String" />
 		<result column="UPDATED_DATE" property="updatedDate" jdbcType="DATE" javaType="java.sql.Timestamp" />
 		<result column="STATUS" property="status" jdbcType="CHAR" javaType="java.lang.String" />
 		<result column="DEPT_UNDERWRITING_PREMIUM" property="deptUnderwritingPremium" jdbcType="DOUBLE" javaType="java.lang.Double" />
 		<result column="PLAN_WRITER" property="planWriter" jdbcType="VARCHAR" javaType="java.lang.String" />
 		<result column="VALID_IND" property="validInd" jdbcType="CHAR" javaType="java.lang.String" />
 		<result column="CREATED_DATE" property="createdDate" jdbcType="DATE" javaType="java.sql.Timestamp" />
 		<result column="DEPT_PREMIUM" property="deptPremium" jdbcType="DOUBLE" javaType="java.lang.Double" />
 		<result column="APPROVE_FLAG" property="approveFlag" jdbcType="CHAR" javaType="java.lang.String" />
 		<result column="APPROVE_CODE" property="approveCode" jdbcType="VARCHAR" javaType="java.lang.String" />
  	</resultMap>
	
	<resultMap id="BaseResultVo" type="com.sinosafe.xszc.planNew.vo.PlanMainNew">
		<id column="PLAN_MAIN_ID" property="planMainId" javaType="java.lang.String" jdbcType="VARCHAR" />
		<result column="UPDATED_USER" property="updatedUser" jdbcType="VARCHAR" javaType="java.lang.String" />
 		<result column="QUARTER" property="quarter" jdbcType="CHAR" javaType="java.lang.String" />
 		<result column="PLAN_WRITE_DATE" property="planWriteDate" jdbcType="DATE" javaType="java.sql.Timestamp" />
 		<result column="CREATED_USER" property="createdUser" jdbcType="VARCHAR" javaType="java.lang.String" />
 		<result column="YEAR" property="year" jdbcType="INTEGER" javaType="java.lang.Integer" />
 		<result column="DEPT_CODE" property="deptCode" jdbcType="VARCHAR" javaType="java.lang.String" />
 		<result column="PLAN_TYPE" property="planType" jdbcType="CHAR" javaType="java.lang.String" />
 		<result column="UPDATED_DATE" property="updatedDate" jdbcType="DATE" javaType="java.sql.Timestamp" />
 		<result column="STATUS" property="status" jdbcType="CHAR" javaType="java.lang.String" />
 		<result column="DEPT_UNDERWRITING_PREMIUM" property="deptUnderwritingPremium" jdbcType="DOUBLE" javaType="java.lang.Double" />
 		<result column="PLAN_WRITER" property="planWriter" jdbcType="VARCHAR" javaType="java.lang.String" />
 		<result column="VALID_IND" property="validInd" jdbcType="CHAR" javaType="java.lang.String" />
 		<result column="CREATED_DATE" property="createdDate" jdbcType="DATE" javaType="java.sql.Timestamp" />
 		<result column="DEPT_PREMIUM" property="deptPremium" jdbcType="DOUBLE" javaType="java.lang.Double" />
 		<result column="APPROVE_FLAG" property="approveFlag" jdbcType="CHAR" javaType="java.lang.String" />
 		<result column="APPROVE_CODE" property="approveCode" jdbcType="VARCHAR" javaType="java.lang.String" />
  	</resultMap>

	<!-- 查询数据列Sql不转换成对应的Java命名 -->
	<sql id="Base_Column_List" >
		UPDATED_USER,
		QUARTER,
		PLAN_WRITE_DATE,
		CREATED_USER,
		YEAR,
		DEPT_CODE,
		PLAN_TYPE,
		UPDATED_DATE,
		STATUS,
		DEPT_UNDERWRITING_PREMIUM,
		PLAN_WRITER,
		VALID_IND,
		CREATED_DATE,
		DEPT_PREMIUM,
		PLAN_MAIN_ID,
		APPROVE_FLAG,
		APPROVE_CODE
	</sql>
	
	<!-- 查询数据列Sql换成对应的Java命名 -->
	<sql id="Base_Column_List_JavaName" >
		UPDATED_USER as "updatedUser",
		QUARTER as "quarter",
		PLAN_WRITE_DATE as "planWriteDate",
		CREATED_USER as "createdUser",
		YEAR as "year",
		DEPT_CODE as "deptCode",
		PLAN_TYPE as "planType",
		UPDATED_DATE as "updatedDate",
		STATUS as "status",
		DEPT_UNDERWRITING_PREMIUM as "deptUnderwritingPremium",
		PLAN_WRITER as "planWriter",
		VALID_IND as "validInd",
		CREATED_DATE as "createdDate",
		DEPT_PREMIUM as "deptPremium",
		PLAN_MAIN_ID as "planMainId",
		APPROVE_FLAG as "approveFlag",
		APPROVE_CODE as "approveCode"
	</sql>
	
	<!-- 写入操作的SQL -->
	<sql id="Insert_Base_values">
		#{updatedUser,jdbcType=VARCHAR},
 		#{quarter,jdbcType=CHAR},
 		#{planWriteDate,jdbcType=DATE},
 		#{createdUser,jdbcType=VARCHAR},
 		#{year,jdbcType=INTEGER},
 		#{deptCode,jdbcType=VARCHAR},
 		#{planType,jdbcType=CHAR},
 		#{updatedDate,jdbcType=DATE},
 		#{status,jdbcType=CHAR},
 		#{deptUnderwritingPremium,jdbcType=DOUBLE},
 		#{planWriter,jdbcType=VARCHAR},
 		#{validInd,jdbcType=CHAR},
 		#{createdDate,jdbcType=DATE},
 		#{deptPremium,jdbcType=DOUBLE},
 		#{planMainId,jdbcType=VARCHAR},
 		#{approveFlag,jdbcType=CHAR},
 		#{approveCode,jdbcType=VARCHAR}
 	</sql>
 	
 	<sql id="User_Base_Column_List" >
		QUARTER,
		PLAN_WRITE_DATE,
		YEAR,
		pm.dept_code || '-' || de.dept_simple_name DEPT_CODE,
		PLAN_TYPE,
		STATUS,
		PLAN_WRITER,
		DEPT_PREMIUM,
		PLAN_MAIN_ID,
		APPROVE_FLAG,
		APPROVE_CODE
	</sql>
	
	<sql id="Use_Base_Where_Sql">
		<where>
			de.valid_ind = 1 and pm.valid_ind = 1 
		<if test="quarter != null and quarter != ''">
			and QUARTER = #{quarter,jdbcType=CHAR}
		</if>
		<if test="planWriteDate != null and planWriteDate != ''">
			and PLAN_WRITE_DATE = to_date(#{planWriteDate,jdbcType=DATE},'yyyy/mm/dd')
		</if>
		<if test="year != null and year != ''">
			and YEAR = #{year,jdbcType=INTEGER}
		</if>
		<!-- 如果部门代码为空，不显示记录 -->
		<if test="deptCode == null or deptCode == '' " >
			and 1=2
		</if>
		<!-- 如果部门代码非空，则显示记录 -->
		<if test="deptCode != null and deptCode != '' ">
		   <choose>
		     <when test="deptCode == '00' ">and 2=2</when>
		     <otherwise> and de.dept_code like #{deptCode,jdbcType=VARCHAR}||'%' </otherwise>
		   </choose>  
		</if>
		<if test="planType != null and planType != ''">
			and PLAN_TYPE = #{planType,jdbcType=CHAR}
		</if>
		<if test="status != null and status != ''">
			and STATUS = #{status,jdbcType=CHAR}
		</if>
		<if test="planWriter != null and planWriter != ''">
			and PLAN_WRITER = #{planWriter,jdbcType=VARCHAR}
		</if>
		<if test="deptPremium != null and deptPremium != ''">
			and DEPT_PREMIUM = #{deptPremium,jdbcType=DOUBLE}
		</if>
		<if test="planMainId != null and planMainId != ''">
			and PLAN_MAIN_ID = #{planMainId,jdbcType=VARCHAR}
		</if>
		</where>
	</sql>
	
	<!-- 查询条件的sql -->
	<sql id="Base_Where_Sql">
		<where>
		<if test="updatedUser != null and updatedUser != ''">
			and UPDATED_USER = #{updatedUser,jdbcType=VARCHAR}
		</if>
		<if test="quarter != null and quarter != ''">
			and QUARTER = #{quarter,jdbcType=CHAR}
		</if>
		<if test="planWriteDate != null and planWriteDate != ''">
			and PLAN_WRITE_DATE = #{planWriteDate,jdbcType=DATE}
		</if>
		<if test="createdUser != null and createdUser != ''">
			and CREATED_USER = #{createdUser,jdbcType=VARCHAR}
		</if>
		<if test="year != null and year != ''">
			and YEAR = #{year,jdbcType=INTEGER}
		</if>
		<if test="deptCode != null and deptCode != ''">
			and DEPT_CODE = #{deptCode,jdbcType=VARCHAR}
		</if>
		<if test="planType != null and planType != ''">
			and PLAN_TYPE = #{planType,jdbcType=CHAR}
		</if>
		<if test="updatedDate != null and updatedDate != ''">
			and UPDATED_DATE = #{updatedDate,jdbcType=DATE}
		</if>
		<if test="status != null and status != ''">
			and STATUS = #{status,jdbcType=CHAR}
		</if>
		<if test="deptUnderwritingPremium != null and deptUnderwritingPremium != ''">
			and DEPT_UNDERWRITING_PREMIUM = #{deptUnderwritingPremium,jdbcType=DOUBLE}
		</if>
		<if test="planWriter != null and planWriter != ''">
			and PLAN_WRITER = #{planWriter,jdbcType=VARCHAR}
		</if>
		<if test="validInd != null and validInd != ''">
			and VALID_IND = #{validInd,jdbcType=CHAR}
		</if>
		<if test="createdDate != null and createdDate != ''">
			and CREATED_DATE = #{createdDate,jdbcType=DATE}
		</if>
		<if test="deptPremium != null and deptPremium != ''">
			and DEPT_PREMIUM = #{deptPremium,jdbcType=DOUBLE}
		</if>
		<if test="planMainId != null and planMainId != ''">
			and PLAN_MAIN_ID = #{planMainId,jdbcType=VARCHAR}
		</if>
		<if test="approveFlag != null and approveFlag != ''">
			and APPROVE_FLAG = #{approveFlag,jdbcType=CHAR}
		</if>
		<if test="approveCode != null and approveCode != ''">
			and APPROVE_CODE = #{approveCode,jdbcType=CHAR}
		</if>
		</where>
	</sql>
	
	<!-- 
		insert操作给定的参数是java.util.Map<String,Object>类型的对象，
		与<sql id="Insert_Base_values">中配置的列一致
	-->
	<insert id="insertVo" parameterType="com.sinosafe.xszc.planNew.vo.PlanMainNew" >
    insert into PLAN_MAIN_NEW (
		<include refid="Base_Column_List" />
    )
	values (
		<include refid="Insert_Base_values" />
    )
	</insert>
	
	<!-- 
		insert操作给定的参数是java.util.Map<String,Object>类型的对象，
		与<sql id="Insert_Base_values">中配置的列一致
	-->
	<insert id="insert" parameterType="map" >
    insert into PLAN_MAIN_NEW (
		<include refid="Base_Column_List" />
    )
	values (
		<include refid="Insert_Base_values" />
    )
	</insert>

	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from PLAN_MAIN_NEW
    where PLAN_MAIN_ID = #{planMainId,jdbcType=VARCHAR}
	</delete>
<!-- 
	<delete id="deleteByDataKey" parameterType="long">
    delete from PLAN_MAIN_NEW
    where PK_SERIAL = #{data}
	</delete>
 -->
	<update id="updateByPrimaryKeySelective" parameterType="map" >
	update PLAN_MAIN_NEW
	<set>
	<if test="updatedUser != null and updatedUser != ''">
		UPDATED_USER = #{updatedUser,jdbcType=VARCHAR},
	</if>
  	<if test="quarter != null and quarter != ''">
		QUARTER = #{quarter,jdbcType=CHAR},
	</if>
  	<if test="planWriteDate != null and planWriteDate != ''">
		PLAN_WRITE_DATE = #{planWriteDate,jdbcType=DATE},
	</if>
  	<if test="createdUser != null and createdUser != ''">
		CREATED_USER = #{createdUser,jdbcType=VARCHAR},
	</if>
  	<if test="year != null and year != ''">
		YEAR = #{year,jdbcType=INTEGER},
	</if>
  	<if test="deptCode != null and deptCode != ''">
		DEPT_CODE = #{deptCode,jdbcType=VARCHAR},
	</if>
  	<if test="planType != null and planType != ''">
		PLAN_TYPE = #{planType,jdbcType=CHAR},
	</if>
  	<if test="updatedDate != null and updatedDate != ''">
		UPDATED_DATE = #{updatedDate,jdbcType=DATE},
	</if>
  	<if test="status != null and status != ''">
		STATUS = #{status,jdbcType=CHAR},
	</if>
  	<if test="deptUnderwritingPremium != null and deptUnderwritingPremium != ''">
		DEPT_UNDERWRITING_PREMIUM = #{deptUnderwritingPremium,jdbcType=DOUBLE},
	</if>
  	<if test="planWriter != null and planWriter != ''">
		PLAN_WRITER = #{planWriter,jdbcType=VARCHAR},
	</if>
  	<if test="validInd != null and validInd != ''">
		VALID_IND = #{validInd,jdbcType=CHAR},
	</if>
  	<if test="createdDate != null and createdDate != ''">
		CREATED_DATE = #{createdDate,jdbcType=DATE},
	</if>
  	<if test="deptPremium != null and deptPremium != ''">
		DEPT_PREMIUM = #{deptPremium,jdbcType=DOUBLE},
	</if>
  	<if test="approveFlag != null and approveFlag != ''">
		APPROVE_FLAG = #{approveFlag,jdbcType=CHAR},
	</if>
  	<if test="approveCode != null and approveCode != ''">
		APPROVE_CODE = #{approveCode,jdbcType=VARCHAR},
	</if>
   	</set>
	where PLAN_MAIN_ID = #{planMainId,jdbcType=VARCHAR}
	</update>
	
	<update id="updateByPrimaryKey" parameterType="map" >
		update PLAN_MAIN_NEW
		set 
			UPDATED_USER = #{updatedUser,jdbcType=VARCHAR},
  			QUARTER = #{quarter,jdbcType=CHAR},
  			PLAN_WRITE_DATE = #{planWriteDate,jdbcType=DATE},
  			CREATED_USER = #{createdUser,jdbcType=VARCHAR},
  			YEAR = #{year,jdbcType=INTEGER},
  			DEPT_CODE = #{deptCode,jdbcType=VARCHAR},
  			PLAN_TYPE = #{planType,jdbcType=CHAR},
  			UPDATED_DATE = #{updatedDate,jdbcType=DATE},
  			STATUS = #{status,jdbcType=CHAR},
  			DEPT_UNDERWRITING_PREMIUM = #{deptUnderwritingPremium,jdbcType=DOUBLE},
  			PLAN_WRITER = #{planWriter,jdbcType=VARCHAR},
  			VALID_IND = #{validInd,jdbcType=CHAR},
  			CREATED_DATE = #{createdDate,jdbcType=DATE},
  			DEPT_PREMIUM = #{deptPremium,jdbcType=DOUBLE},
  			APPROVE_FLAG = #{approveFlag,jdbcType=CHAR},
  			APPROVE_CODE = #{approveCode,jdbcType=VARCHAR},
   		where PLAN_MAIN_ID = #{planMainId,jdbcType=VARCHAR}
	</update>

	<update id="updateByPrimaryKeySelectiveVo" parameterType="com.sinosafe.xszc.planNew.vo.PlanMainNew" >
	update PLAN_MAIN_NEW
	<set>
	<if test="updatedUser != null and updatedUser != ''">
		UPDATED_USER = #{updatedUser,jdbcType=VARCHAR},
	</if>
  	<if test="quarter != null and quarter != ''">
		QUARTER = #{quarter,jdbcType=CHAR},
	</if>
  	<if test="planWriteDate != null and planWriteDate != ''">
		PLAN_WRITE_DATE = #{planWriteDate,jdbcType=DATE},
	</if>
  	<if test="createdUser != null and createdUser != ''">
		CREATED_USER = #{createdUser,jdbcType=VARCHAR},
	</if>
  	<if test="year != null and year != ''">
		YEAR = #{year,jdbcType=INTEGER},
	</if>
  	<if test="deptCode != null and deptCode != ''">
		DEPT_CODE = #{deptCode,jdbcType=VARCHAR},
	</if>
  	<if test="planType != null and planType != ''">
		PLAN_TYPE = #{planType,jdbcType=CHAR},
	</if>
  	<if test="updatedDate != null and updatedDate != ''">
		UPDATED_DATE = #{updatedDate,jdbcType=DATE},
	</if>
  	<if test="status != null and status != ''">
		STATUS = #{status,jdbcType=CHAR},
	</if>
  	<if test="deptUnderwritingPremium != null and deptUnderwritingPremium != ''">
		DEPT_UNDERWRITING_PREMIUM = #{deptUnderwritingPremium,jdbcType=DOUBLE},
	</if>
  	<if test="planWriter != null and planWriter != ''">
		PLAN_WRITER = #{planWriter,jdbcType=VARCHAR},
	</if>
  	<if test="validInd != null and validInd != ''">
		VALID_IND = #{validInd,jdbcType=CHAR},
	</if>
  	<if test="createdDate != null and createdDate != ''">
		CREATED_DATE = #{createdDate,jdbcType=DATE},
	</if>
  	<if test="deptPremium != null and deptPremium != ''">
		DEPT_PREMIUM = #{deptPremium,jdbcType=DOUBLE},
	</if>
	<if test="approveFlag != null and approveFlag != ''">
		APPROVE_FLAG = #{approveFlag,jdbcType=CHAR},
	</if>
  	<if test="approveCode != null and approveCode != ''">
		APPROVE_CODE = #{approveCode,jdbcType=VARCHAR},
	</if>
   	</set>
	where PLAN_MAIN_ID = #{planMainId,jdbcType=VARCHAR}
	</update>
	
	<update id="updateByPrimaryKeyVo" parameterType="com.sinosafe.xszc.planNew.vo.PlanMainNew" >
		update PLAN_MAIN_NEW
		set 
			UPDATED_USER = #{updatedUser,jdbcType=VARCHAR},
  			QUARTER = #{quarter,jdbcType=CHAR},
  			PLAN_WRITE_DATE = #{planWriteDate,jdbcType=DATE},
  			CREATED_USER = #{createdUser,jdbcType=VARCHAR},
  			YEAR = #{year,jdbcType=INTEGER},
  			DEPT_CODE = #{deptCode,jdbcType=VARCHAR},
  			PLAN_TYPE = #{planType,jdbcType=CHAR},
  			UPDATED_DATE = #{updatedDate,jdbcType=DATE},
  			STATUS = #{status,jdbcType=CHAR},
  			DEPT_UNDERWRITING_PREMIUM = #{deptUnderwritingPremium,jdbcType=DOUBLE},
  			PLAN_WRITER = #{planWriter,jdbcType=VARCHAR},
  			VALID_IND = #{validInd,jdbcType=CHAR},
  			CREATED_DATE = #{createdDate,jdbcType=DATE},
  			DEPT_PREMIUM = #{deptPremium,jdbcType=DOUBLE},
  			APPROVE_FLAG = #{approveFlag,jdbcType=CHAR},
  			APPROVE_CODE = #{approveCode,jdbcType=VARCHAR},
   		where PLAN_MAIN_ID = #{planMainId,jdbcType=VARCHAR}
	</update>

	<!-- 根据Id查询一条数据 -->
	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select <include refid="Base_Column_List" />
	from PLAN_MAIN_NEW
	where PLAN_MAIN_ID = #{planMainId,jdbcType=VARCHAR}
	</select>
	
	<!-- 条件查询一条数据，通过机构编码和计划年份 -->
	<select id="selectByDeptYear" resultMap="BaseResultVo" parameterType="map" >
    select <include refid="Base_Column_List" />
	from PLAN_MAIN_NEW
	where DEPT_CODE = #{deptCode,jdbcType=VARCHAR} 
	and YEAR = #{year,jdbcType=INTEGER}
	and VALID_IND = '1'
	</select>
	
	<!-- 根据Id查询一条数据 -->
	<select id="selectByPrimaryKeyVo" resultMap="BaseResultVo" parameterType="java.lang.String" >
	select <include refid="User_Base_Column_List" />
     from plan_main_new pm 
    inner join department de 
            on pm.dept_code = de.dept_code
    where pm.valid_ind = '1'
      and de.valid_ind = 1
      and PLAN_MAIN_ID = #{planMainId,jdbcType=VARCHAR}
	</select>
	
	<!-- 查询某个id是否存在 -->
	<select id="countByPrimaryKey" resultType="long" parameterType="java.lang.String" >
    select count(1) count 
    from PLAN_MAIN_NEW 
	where PLAN_MAIN_ID = #{planMainId,jdbcType=VARCHAR}  and VALID_IND = '1'
	</select>
	
	<!-- 查询某个id是否存在 通过机构ID和年份-->
	<select id="countByDeptYear" resultType="long" parameterType="map" >
    select count(1) count 
    from PLAN_MAIN_NEW 
	where DEPT_CODE = #{deptCode,jdbcType=VARCHAR}
	 and YEAR = #{year,jdbcType=INTEGER} 
	 and VALID_IND = '1'
	</select>

	<!-- 条件查询总数据量 -->
	<select id="queryCount" parameterType="map" resultType="long">
	select count(1)
	from PLAN_MAIN_NEW pm
		inner join department de on pm.dept_code = de.dept_code
		<include refid="Use_Base_Where_Sql"/>
	</select>
	
	<!-- 条件查询总数据量 -->
	<select id="queryCountVo" parameterType="com.sinosafe.xszc.planNew.vo.PlanMainNew" resultType="long">
	select count(1)
	from PLAN_MAIN_NEW <include refid="Base_Where_Sql" />
	</select>

	<!-- 单独条件分页查询语句,注意下面语句中的endpoint和startpoint这两个名称不可修改，否则将导致sql错误 -->
	<select id="queryListPage" parameterType="map" resultMap="BaseResultVo">
	select * from (
		select a.*,rownum rn from (
		select 
		<include refid="User_Base_Column_List"/>
		from PLAN_MAIN_NEW pm
		inner join department de on pm.dept_code = de.dept_code 
		<include refid="Use_Base_Where_Sql"/>
		order by pm.dept_code asc ) a where rownum &lt;= #{endpoint} 
	) where rn &gt;= #{startpoint}
	</select>
	
	<!-- 单独条件分页查询语句,注意下面语句中的endpoint和startpoint这两个名称不可修改，否则将导致sql错误 -->
	<select id="queryListPageVo" parameterType="map" resultMap="BaseResultVo">
	select * from (
		select a.*,rownum rn from (
		select 
		<include refid="Base_Column_List"/>
		from PLAN_MAIN_NEW
		<include refid="Base_Where_Sql"/>
		) a where rownum &lt;= #{endpoint}
	) where rn &gt;= #{startpoint}
	</select>
	
	<!-- 条件查询 -->
	<select id="query" parameterType="map" resultMap="BaseResultMap">
		select 
		<include refid="Base_Column_List"/>
		from PLAN_MAIN_NEW
		<include refid="Base_Where_Sql"/>
	</select>
	
	<!-- 条件查询 -->
	<select id="queryVo" parameterType="map" resultMap="BaseResultVo">
		select 
		<include refid="Base_Column_List"/>
		from PLAN_MAIN_NEW
		<include refid="Base_Where_Sql"/>
	</select>
	
	<!-- 综合条件分页查询语句,注意下面语句中的endpoint和startpoint这两个名称不可修改，否则将导致sql错误 -->
	<select id="queryPage" parameterType="map" resultMap="BaseResultMap">
	<choose>
		<when test="endpoint!=null and endpoint != '' and startpoint != null and startpoint != ''">
		select * from (
			select a.*,rownum rn from (
				select 
				<include refid="Base_Column_List"/>
				from PLAN_MAIN_NEW
				<include refid="Base_Where_Sql"/>
			) a where rownum &lt;= #{endpoint}
		) where rn &gt;= #{startpoint}
		</when>
		<otherwise>
		<!-- 这里的"count"重命名不可修改，否则会出现异常 -->
		select count(1) "count" from PLAN_MAIN_NEW <include refid="Base_Where_Sql" />
		</otherwise>
	</choose>
	</select>
	
	
</mapper>
